Search.setIndex({"docnames": ["examples", "index", "requirements", "speechtotext/benchmark/index", "speechtotext/index", "speechtotext/metric/index", "speechtotext/model/index", "speechtotext/plot/index"], "filenames": ["examples.rst", "index.rst", "requirements.rst", "speechtotext/benchmark/index.rst", "speechtotext/index.rst", "speechtotext/metric/index.rst", "speechtotext/model/index.rst", "speechtotext/plot/index.rst"], "titles": ["Code Examples for speechtotext", "Welcome to speechtotext\u2019s documentation!", "Requirements for speechtotext", "speechtotext benchmark package", "Speechtotext package", "speechtotext metric package", "Speechtotext model package", "speechtotext plot package"], "terms": {"thi": [0, 2, 3, 4, 5, 6, 7], "page": [0, 1], "i": [0, 2, 3, 4, 6, 7], "an": [0, 2, 3, 4, 7], "collect": 0, "how": 0, "us": [0, 3, 4, 5, 6, 7], "packag": [0, 2], "modul": [0, 1, 3, 4, 5, 6, 7], "like": [0, 3, 4, 5, 6, 7], "import": [0, 3, 4, 5, 6, 7], "from": [0, 3, 4, 5, 6, 7], "dataset": [0, 1, 2, 3, 5, 6], "benchmark": [0, 1, 4, 5, 6, 7], "custombenchmark": [0, 1], "run_benchmark": [0, 3], "function": [0, 1, 5, 7], "force_cudnn_initi": [0, 4], "plot": [0, 1, 5], "metric": [0, 1, 3, 6, 7], "custommetr": [0, 1, 7], "load": [0, 4], "path_to_dir": [0, 3, 4, 6], "path": [0, 2, 3, 4, 6], "name": [0, 2, 3, 4, 6], "dataset_nam": [0, 3, 4, 6], "set": [0, 3, 4, 6], "run": [0, 3, 6], "number_of_sampl": [0, 3, 4, 6], "100": 0, "whisperbenchmark": [0, 3], "whisperapibenchmark": [0, 3], "benchmark_list": [0, 3], "list": [0, 3, 4, 6, 7], "result": [0, 3, 4, 5, 6, 7], "creat": [0, 3, 4, 5, 6, 7], "report_nam": [0, 4, 7], "benchmark_nam": 0, "save_al": [0, 7], "requir": [1, 4], "code": [1, 7], "exampl": [1, 4], "model": [1, 2, 3, 4, 5, 7], "modelwrapp": [1, 3], "whisperwrapp": 1, "amazonwrapp": 1, "googlewrapp": 1, "deepgramwrapp": 1, "customplot": 1, "index": [1, 4], "search": 1, "folder": [2, 4, 5, 7], "transcript": [2, 4, 5, 6], "txt": [2, 4], "test": [2, 3, 4], "directori": [2, 6], "python": 2, "script": 2, "openai_api_kei": [2, 6], "sk": 2, "somemorerandomnumberlettersandmorerandomnessform": 2, "openai_organ": [2, 6], "org": 2, "somerandomnumberandlett": 2, "aws_access_key_id": [2, 6], "access": 2, "id": [2, 4, 5, 6], "aws_secret_access_kei": [2, 6], "acc": 2, "kei": [2, 4], "amazon_region": [2, 6], "eu": 2, "west": 2, "3": 2, "amazon_bucket": [2, 6], "bucket": 2, "For": 2, "foo": 2, "follow": [2, 4], "command": 2, "return": [2, 3, 4, 5, 6, 7], "region": 2, "curl": 2, "si": 2, "s3": 2, "amazonaw": 2, "com": 2, "awk": 2, "x": [2, 7], "amz": 2, "print": [2, 3, 4, 5], "2": 2, "file": [2, 4, 5, 6], "servic": 2, "account": 2, "link": [2, 4], "cloud": 2, "doc": 2, "google_application_credenti": [2, 6], "keyfil": 2, "json": 2, "deepgram_api_kei": [2, 6], "10": [3, 4, 6], "dir": [3, 4, 6], "set_dataset": [3, 6], "wb": 3, "convert": 3, "panda": [3, 4, 7], "datafram": [3, 4, 5, 7], "df": [3, 4, 5, 7], "convert_to_panda": 3, "save": [3, 4, 5, 7], "csv": [3, 4], "datetim": 3, "benchmark_results_to_csv": [3, 4], "5": 3, "wapib": 3, "benchmark_dataset": 3, "dataset_rdh": 3, "class": [3, 4, 5, 6, 7], "with_clean": [3, 5, 6], "true": [3, 4, 5, 6], "base": [3, 4, 5, 6, 7], "abc": [3, 4, 6], "valid": [3, 4], "parent": [3, 6, 7], "all": [3, 4, 7], "benchmark_sampl": [3, 6], "none": 3, "type": [3, 4, 5, 6, 7], "pd": [3, 4, 5], "core": [3, 4, 5, 7], "frame": [3, 4, 5, 7], "abstract": [3, 4, 5, 6, 7], "create_model": [3, 6], "wrapper": [3, 6], "save_to_csv": 3, "save_nam": [3, 4], "str": [3, 4, 5, 6, 7], "output": [3, 4], "paramet": [3, 4, 5, 6], "filenam": [3, 4], "classmethod": 3, "update_sampl": 3, "int": [3, 4, 6], "updat": 3, "sampl": [3, 4, 6], "number": [3, 4, 6], "al": 3, "out": 3, "amazonapibenchmark": 3, "amazon": [3, 6], "api": [3, 6], "transcrib": [3, 6], "model_bas": [3, 6], "amazonapi": [3, 6], "deepgramapibenchmark": 3, "deepgram": [3, 6], "deepgramapi": 3, "googleapibenchmark": 3, "googl": [3, 6], "googleapi": [3, 6], "whisper": [3, 6], "whisperapi": 3, "local": [3, 6], "speech2text": 4, "forc": 4, "torch": 4, "cuda": 4, "clean": [4, 6], "string": 4, "string_clean": 4, "ha": 4, "8": 4, "regex_string_pars": 4, "regex": 4, "parc": 4, "up": 4, "ar": [4, 7], "baseresult": [4, 5, 7], "report_fold": [4, 5, 7], "file_nam": [4, 5, 7], "report": [4, 5], "except": 4, "requiredenvvariablesmiss": 4, "env_nam": 4, "when": 4, "env": [4, 6], "variabl": 4, "miss": 4, "benchmark_results_2023_04_04_13_36_13": [], "option": [4, 6], "default": [4, 5, 6], "default_csv_nam": 4, "get_extention_of_file_nam": 4, "get": [4, 6], "extent": 4, "ofo": 4, "tile": 4, "get_file_name_without_extent": 4, "join_benchmark_result": 4, "set_index": 4, "join": 4, "bool": [4, 6], "model_nam": [4, 6, 7], "audio_id": [4, 5], "can": [4, 7], "load_env_vari": 4, "rais": 4, "its": 4, "valu": [4, 6], "multidispatch": 4, "allow": 4, "method": 4, "overload": 4, "save_folder_nam": 4, "folder_nam": 4, "make": 4, "default_report_fold": 4, "separate_benchmark_results_by_model": 4, "dict": 4, "seper": 4, "each": [4, 6], "text": [4, 6], "stt": [4, 6], "unclean": 4, "time": 4, "f": 4, "durat": [4, 5], "The": [4, 5], "In": 4, "rel": 4, "audiofil": 4, "entri": 4, "20000_mijlen": 4, "20000_mijlen_0001": 4, "wav": 4, "trancsript": 4, "audio": [4, 5, 6], "existing_id": 4, "get_path_of_frag": 4, "get_text_of_id": 4, "n": [4, 6], "trandom": 4, "dataset_n_random": 4, "sampledataset": [4, 6], "get_n_sampl": 4, "file_ext": 4, "datasetbar": 4, "extract": 4, "data": [4, 7], "random": [4, 6], "load_transcript": 4, "object": [4, 5, 7], "bare": 4, "fragment": 4, "filenotfounderror": 4, "doesn": 4, "t": 4, "exist": 4, "spoken": 4, "calcul": 5, "m": 5, "de": 5, "stoel": 5, "heeft": 5, "krassen": 5, "gemaakt": 5, "op": 5, "vloer": 5, "id_from_dataset": 5, "refer": 5, "hypothesi": 5, "float": 5, "calul": 5, "attribut": 5, "class_attribut": 5, "wer": [5, 7], "word": 5, "error": 5, "rate": 5, "mer": 5, "match": 5, "wil": 5, "inform": 5, "lost": 5, "wip": 5, "preserv": 5, "cer": 5, "charact": 5, "notebook_metrics_print": 5, "custom": [5, 6, 7], "matplotlib": [5, 7], "pictur": [5, 7], "benchmarkresult": [5, 7], "basemetr": 5, "def": [5, 6, 7], "create_df": 5, "self": [5, 6, 7], "add": [5, 7], "custom_result": [5, 7], "append": [5, 6, 7], "need": [5, 6, 7], "defaultmetr": [5, 7], "statist": 5, "implement": 6, "modulewrapp": 6, "child": [6, 7], "modelvers": 6, "childmodelvers": 6, "model_vers": 6, "demo": 6, "childmodelwrapp": 6, "__init__": 6, "get_model": 6, "modeltyp": 6, "get_transcript_of_fil": 6, "audio_file_nam": 6, "childbenchmark": 6, "version": 6, "enum": 6, "avail": 6, "benchmark_n_sampl": 6, "benchmerk": 6, "existing_audio_id": 6, "whispervers": 6, "tini": 6, "choisen": 6, "arrai": 6, "whisperapivers": 6, "whisper_1": 6, "1": 6, "whisperapiwrapp": 6, "current": 6, "call": 6, "larg": 6, "medium": 6, "small": 6, "amazonapivers": 6, "amazon_default": 6, "languag": 6, "amazonapiwrapp": 6, "bucket_exist": 6, "language_cod": 6, "nl": 6, "googleapivers": 6, "google_default": 6, "googleapiwrapp": 6, "BE": 6, "deepgramapivers": 6, "deepgram_default": 6, "gener": [6, 7], "deepgram_enhanc": 6, "enhanc": 6, "deepgramapiwrapp": 6, "baseplot": 7, "ad": 7, "custom_plot": 7, "basematplotlib": 7, "should": 7, "made": 7, "create_plot": 7, "figur": 7, "plotli": 7, "graph_obj": 7, "_figur": 7, "baseplotli": 7, "d": 7, "tale": 7, "launch_dtal": 7, "launch": 7, "webui": 7, "explor": 7, "loop": 7, "over": 7, "boxplotofmodelsw": 7, "sn": 7, "boxplot": 7, "y": 7, "fig": 7, "get_figur": 7, "save_plot": 7, "savefig": 7, "save_file_nam": 7, "demoplotlyexampl": 7, "px": 7, "gapmind": 7, "queri": 7, "countri": 7, "canada": 7, "line": 7, "year": 7, "lifeexp": 7, "titl": 7, "life": 7, "expect": 7, "cerbymodelnamebydataset": 7, "durationbymodelnamebydataset": 7, "meanofmetricbymodelnam": 7, "merbymodelnamebydataset": 7, "werbymodelnamebydataset": 7, "wilbymodelnamebydataset": 7, "wipbymodelnamebydataset": 7, "benchmark_results_2023_04_04_15_57_40": 4}, "objects": {"speechtotext.benchmark": [[3, 0, 0, "-", "benchmarks"], [3, 0, 0, "-", "customBenchmarks"]], "speechtotext.benchmark.benchmarks": [[3, 1, 1, "", "Benchmark"], [3, 4, 1, "", "run_benchmarks"]], "speechtotext.benchmark.benchmarks.Benchmark": [[3, 2, 1, "", "BENCHMARK_SAMPLES"], [3, 2, 1, "", "DATASET"], [3, 3, 1, "", "convert_to_pandas"], [3, 3, 1, "", "create_models"], [3, 3, 1, "", "save_to_csv"], [3, 3, 1, "", "set_dataset"], [3, 3, 1, "", "update_samples"]], "speechtotext.benchmark.customBenchmarks": [[3, 1, 1, "", "AmazonAPIBenchmark"], [3, 1, 1, "", "DeepgramAPIBenchmark"], [3, 1, 1, "", "GoogleAPIBenchmark"], [3, 1, 1, "", "WhisperAPIBenchmark"], [3, 1, 1, "", "WhisperBenchmark"]], "speechtotext.benchmark.customBenchmarks.AmazonAPIBenchmark": [[3, 2, 1, "", "MODEL_BASE"], [3, 3, 1, "", "create_models"]], "speechtotext.benchmark.customBenchmarks.DeepgramAPIBenchmark": [[3, 2, 1, "", "MODEL_BASE"], [3, 3, 1, "", "create_models"]], "speechtotext.benchmark.customBenchmarks.GoogleAPIBenchmark": [[3, 2, 1, "", "MODEL_BASE"], [3, 3, 1, "", "create_models"]], "speechtotext.benchmark.customBenchmarks.WhisperAPIBenchmark": [[3, 2, 1, "", "MODEL_BASE"], [3, 3, 1, "", "create_models"]], "speechtotext.benchmark.customBenchmarks.WhisperBenchmark": [[3, 2, 1, "", "MODEL_BASE"], [3, 3, 1, "", "create_models"]], "speechtotext": [[4, 0, 0, "-", "datasets"], [4, 0, 0, "-", "functions"]], "speechtotext.datasets": [[4, 1, 1, "", "Dataset"], [4, 1, 1, "", "DatasetBare"], [4, 1, 1, "", "SampleDataset"]], "speechtotext.datasets.Dataset": [[4, 3, 1, "", "get_n_samples"], [4, 3, 1, "", "load_transcript"]], "speechtotext.datasets.DatasetBare": [[4, 3, 1, "", "get_path_of_fragment"], [4, 3, 1, "", "get_text_of_id"], [4, 3, 1, "", "number_of_samples"]], "speechtotext.functions": [[4, 1, 1, "", "BaseResult"], [4, 2, 1, "", "REGEX_STRING_PARSE"], [4, 5, 1, "", "RequiredEnvVariablesMissing"], [4, 4, 1, "", "benchmark_results_to_csv"], [4, 4, 1, "", "force_cudnn_initialization"], [4, 4, 1, "", "get_extention_of_file_name"], [4, 4, 1, "", "get_file_name_without_extention"], [4, 4, 1, "", "join_benchmark_results"], [4, 4, 1, "", "load_env_variable"], [4, 4, 1, "", "multidispatch"], [4, 4, 1, "", "save_folder_name"], [4, 4, 1, "", "separate_benchmark_results_by_model"], [4, 4, 1, "", "string_cleaning"], [4, 4, 1, "", "timing"]], "speechtotext.functions.BaseResult": [[4, 3, 1, "", "save"]], "speechtotext.metric": [[5, 0, 0, "-", "customMetrics"], [5, 0, 0, "-", "metrics"]], "speechtotext.metric.customMetrics": [[5, 1, 1, "", "BaseMetrics"], [5, 1, 1, "", "BenchmarkResults"], [5, 1, 1, "", "DefaultMetrics"]], "speechtotext.metric.customMetrics.BaseMetrics": [[5, 3, 1, "", "create_df"], [5, 3, 1, "", "save"]], "speechtotext.metric.customMetrics.BenchmarkResults": [[5, 3, 1, "", "create_df"]], "speechtotext.metric.customMetrics.DefaultMetrics": [[5, 3, 1, "", "create_df"]], "speechtotext.metric.metrics": [[5, 1, 1, "", "Metrics"], [5, 4, 1, "", "notebook_metrics_print"]], "speechtotext.metric.metrics.Metrics": [[5, 2, 1, "", "cer"], [5, 2, 1, "", "mer"], [5, 2, 1, "", "wer"], [5, 2, 1, "", "wil"], [5, 2, 1, "", "wip"]], "speechtotext.model": [[6, 0, 0, "-", "amazonWrapper"], [6, 0, 0, "-", "deepgramWrapper"], [6, 0, 0, "-", "googleWrapper"], [6, 0, 0, "-", "modelWrapper"], [6, 0, 0, "-", "whisperWrapper"]], "speechtotext.model.amazonWrapper": [[6, 1, 1, "", "AmazonAPIVersion"], [6, 1, 1, "", "AmazonAPIWrapper"]], "speechtotext.model.amazonWrapper.AmazonAPIVersion": [[6, 2, 1, "", "AMAZON_DEFAULT"]], "speechtotext.model.amazonWrapper.AmazonAPIWrapper": [[6, 2, 1, "", "BUCKET_EXIST"], [6, 2, 1, "", "LANGUAGE_CODE"], [6, 3, 1, "", "get_model"], [6, 3, 1, "", "get_transcript_of_file"]], "speechtotext.model.deepgramWrapper": [[6, 1, 1, "", "DeepgramAPIVersion"], [6, 1, 1, "", "DeepgramAPIWrapper"]], "speechtotext.model.deepgramWrapper.DeepgramAPIVersion": [[6, 2, 1, "", "DEEPGRAM_DEFAULT"], [6, 2, 1, "", "DEEPGRAM_ENHANCED"]], "speechtotext.model.deepgramWrapper.DeepgramAPIWrapper": [[6, 2, 1, "", "LANGUAGE_CODE"], [6, 3, 1, "", "get_model"], [6, 3, 1, "", "get_transcript_of_file"]], "speechtotext.model.googleWrapper": [[6, 1, 1, "", "GoogleAPIVersion"], [6, 1, 1, "", "GoogleAPIWrapper"]], "speechtotext.model.googleWrapper.GoogleAPIVersion": [[6, 2, 1, "", "GOOGLE_DEFAULT"]], "speechtotext.model.googleWrapper.GoogleAPIWrapper": [[6, 2, 1, "", "LANGUAGE_CODE"], [6, 3, 1, "", "get_model"], [6, 3, 1, "", "get_transcript_of_file"]], "speechtotext.model.modelWrapper": [[6, 1, 1, "", "ModelVersion"], [6, 1, 1, "", "ModelWrapper"]], "speechtotext.model.modelWrapper.ModelWrapper": [[6, 3, 1, "", "benchmark_n_samples"], [6, 3, 1, "", "benchmark_sample"], [6, 3, 1, "", "benchmark_samples"], [6, 3, 1, "", "get_model"], [6, 3, 1, "", "get_transcript_of_file"]], "speechtotext.model.whisperWrapper": [[6, 1, 1, "", "WhisperAPIVersion"], [6, 1, 1, "", "WhisperAPIWrapper"], [6, 1, 1, "", "WhisperVersion"], [6, 1, 1, "", "WhisperWrapper"]], "speechtotext.model.whisperWrapper.WhisperAPIVersion": [[6, 2, 1, "", "WHISPER_1"]], "speechtotext.model.whisperWrapper.WhisperAPIWrapper": [[6, 3, 1, "", "get_model"], [6, 3, 1, "", "get_transcript_of_file"]], "speechtotext.model.whisperWrapper.WhisperVersion": [[6, 2, 1, "", "BASE"], [6, 2, 1, "", "LARGE"], [6, 2, 1, "", "MEDIUM"], [6, 2, 1, "", "SMALL"], [6, 2, 1, "", "TINY"]], "speechtotext.model.whisperWrapper.WhisperWrapper": [[6, 3, 1, "", "get_model"], [6, 3, 1, "", "get_transcript_of_file"]], "speechtotext.plot": [[7, 0, 0, "-", "customPlots"], [7, 0, 0, "-", "plotting"]], "speechtotext.plot.customPlots": [[7, 1, 1, "", "CerByModelnameByDataset"], [7, 1, 1, "", "DurationByModelnameByDataset"], [7, 1, 1, "", "MeanOfMetricByModelname"], [7, 1, 1, "", "MerByModelnameByDataset"], [7, 1, 1, "", "WerByModelnameByDataset"], [7, 1, 1, "", "WilByModelnameByDataset"], [7, 1, 1, "", "WipByModelnameByDataset"]], "speechtotext.plot.customPlots.CerByModelnameByDataset": [[7, 3, 1, "", "create_plot"]], "speechtotext.plot.customPlots.DurationByModelnameByDataset": [[7, 3, 1, "", "create_plot"]], "speechtotext.plot.customPlots.MeanOfMetricByModelname": [[7, 3, 1, "", "create_plot"]], "speechtotext.plot.customPlots.MerByModelnameByDataset": [[7, 3, 1, "", "create_plot"]], "speechtotext.plot.customPlots.WerByModelnameByDataset": [[7, 3, 1, "", "create_plot"]], "speechtotext.plot.customPlots.WilByModelnameByDataset": [[7, 3, 1, "", "create_plot"]], "speechtotext.plot.customPlots.WipByModelnameByDataset": [[7, 3, 1, "", "create_plot"]], "speechtotext.plot.plotting": [[7, 1, 1, "", "BaseMatPlotLib"], [7, 1, 1, "", "BasePlotly"], [7, 1, 1, "", "Plotting"]], "speechtotext.plot.plotting.BaseMatPlotLib": [[7, 3, 1, "", "create_plot"], [7, 3, 1, "", "save"]], "speechtotext.plot.plotting.BasePlotly": [[7, 3, 1, "", "create_plot"], [7, 3, 1, "", "save"]], "speechtotext.plot.plotting.Plotting": [[7, 2, 1, "", "CUSTOM_RESULTS"], [7, 3, 1, "", "launch_dtale"], [7, 3, 1, "", "save_all"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function", "5": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "exception", "Python exception"]}, "titleterms": {"code": 0, "exampl": 0, "speechtotext": [0, 1, 2, 3, 4, 5, 6, 7], "full": 0, "usag": 0, "welcom": 1, "": 1, "document": 1, "get": 1, "start": 1, "packag": [1, 3, 4, 5, 6, 7], "content": [1, 2], "indic": 1, "tabl": 1, "requir": 2, "overview": 2, "env": 2, "whisper": 2, "api": 2, "amazon": 2, "transcrib": 2, "googl": 2, "deepgram": 2, "benchmark": 3, "custombenchmark": 3, "function": 4, "dataset": 4, "metric": 5, "custommetr": 5, "model": 6, "modelwrapp": 6, "whisperwrapp": 6, "amazonwrapp": 6, "googlewrapp": 6, "deepgramwrapp": 6, "plot": 7, "customplot": 7}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Code Examples for speechtotext": [[0, "code-examples-for-speechtotext"]], "Full usage example": [[0, "full-usage-example"]], "Welcome to speechtotext\u2019s documentation!": [[1, "welcome-to-speechtotext-s-documentation"]], "Get started": [[1, null]], "Package Contents": [[1, null]], "Indices and tables": [[1, "indices-and-tables"]], "Requirements for speechtotext": [[2, "requirements-for-speechtotext"]], "Overview": [[2, "overview"]], "Content of .env": [[2, "content-of-env"]], "Whisper API": [[2, "whisper-api"]], "Amazon transcribe": [[2, "amazon-transcribe"]], "Google API": [[2, "google-api"]], "Deepgram API": [[2, "deepgram-api"]], "speechtotext benchmark package": [[3, "speechtotext-benchmark-package"]], "benchmarks": [[3, "module-speechtotext.benchmark.benchmarks"]], "customBenchmarks": [[3, "module-speechtotext.benchmark.customBenchmarks"]], "Speechtotext package": [[4, "speechtotext-package"]], "speechtotext.functions": [[4, "module-speechtotext.functions"]], "speechtotext.datasets": [[4, "module-speechtotext.datasets"]], "speechtotext metric package": [[5, "speechtotext-metric-package"]], "metrics": [[5, "module-speechtotext.metric.metrics"]], "customMetrics": [[5, "module-speechtotext.metric.customMetrics"]], "Speechtotext model package": [[6, "speechtotext-model-package"]], "speechtotext.model.modelWrapper": [[6, "module-speechtotext.model.modelWrapper"]], "speechtotext.model.whisperWrapper": [[6, "module-speechtotext.model.whisperWrapper"]], "speechtotext.model.amazonWrapper": [[6, "module-speechtotext.model.amazonWrapper"]], "speechtotext.model.googleWrapper": [[6, "module-speechtotext.model.googleWrapper"]], "speechtotext.model.deepgramWrapper": [[6, "module-speechtotext.model.deepgramWrapper"]], "speechtotext plot package": [[7, "speechtotext-plot-package"]], "plotting": [[7, "module-speechtotext.plot.plotting"]], "customPlots": [[7, "module-speechtotext.plot.customPlots"]]}, "indexentries": {"amazonapibenchmark (class in speechtotext.benchmark.custombenchmarks)": [[3, "speechtotext.benchmark.customBenchmarks.AmazonAPIBenchmark"]], "benchmark_samples (speechtotext.benchmark.benchmarks.benchmark attribute)": [[3, "speechtotext.benchmark.benchmarks.Benchmark.BENCHMARK_SAMPLES"]], "benchmark (class in speechtotext.benchmark.benchmarks)": [[3, "speechtotext.benchmark.benchmarks.Benchmark"]], "dataset (speechtotext.benchmark.benchmarks.benchmark attribute)": [[3, "speechtotext.benchmark.benchmarks.Benchmark.DATASET"]], "deepgramapibenchmark (class in speechtotext.benchmark.custombenchmarks)": [[3, "speechtotext.benchmark.customBenchmarks.DeepgramAPIBenchmark"]], "googleapibenchmark (class in speechtotext.benchmark.custombenchmarks)": [[3, "speechtotext.benchmark.customBenchmarks.GoogleAPIBenchmark"]], "model_base (speechtotext.benchmark.custombenchmarks.amazonapibenchmark attribute)": [[3, "speechtotext.benchmark.customBenchmarks.AmazonAPIBenchmark.MODEL_BASE"]], "model_base (speechtotext.benchmark.custombenchmarks.deepgramapibenchmark attribute)": [[3, "speechtotext.benchmark.customBenchmarks.DeepgramAPIBenchmark.MODEL_BASE"]], "model_base (speechtotext.benchmark.custombenchmarks.googleapibenchmark attribute)": [[3, "speechtotext.benchmark.customBenchmarks.GoogleAPIBenchmark.MODEL_BASE"]], "model_base (speechtotext.benchmark.custombenchmarks.whisperapibenchmark attribute)": [[3, "speechtotext.benchmark.customBenchmarks.WhisperAPIBenchmark.MODEL_BASE"]], "model_base (speechtotext.benchmark.custombenchmarks.whisperbenchmark attribute)": [[3, "speechtotext.benchmark.customBenchmarks.WhisperBenchmark.MODEL_BASE"]], "whisperapibenchmark (class in speechtotext.benchmark.custombenchmarks)": [[3, "speechtotext.benchmark.customBenchmarks.WhisperAPIBenchmark"]], "whisperbenchmark (class in speechtotext.benchmark.custombenchmarks)": [[3, "speechtotext.benchmark.customBenchmarks.WhisperBenchmark"]], "convert_to_pandas() (speechtotext.benchmark.benchmarks.benchmark method)": [[3, "speechtotext.benchmark.benchmarks.Benchmark.convert_to_pandas"]], "create_models() (speechtotext.benchmark.benchmarks.benchmark method)": [[3, "speechtotext.benchmark.benchmarks.Benchmark.create_models"]], "create_models() (speechtotext.benchmark.custombenchmarks.amazonapibenchmark method)": [[3, "speechtotext.benchmark.customBenchmarks.AmazonAPIBenchmark.create_models"]], "create_models() (speechtotext.benchmark.custombenchmarks.deepgramapibenchmark method)": [[3, "speechtotext.benchmark.customBenchmarks.DeepgramAPIBenchmark.create_models"]], "create_models() (speechtotext.benchmark.custombenchmarks.googleapibenchmark method)": [[3, "speechtotext.benchmark.customBenchmarks.GoogleAPIBenchmark.create_models"]], "create_models() (speechtotext.benchmark.custombenchmarks.whisperapibenchmark method)": [[3, "speechtotext.benchmark.customBenchmarks.WhisperAPIBenchmark.create_models"]], "create_models() (speechtotext.benchmark.custombenchmarks.whisperbenchmark method)": [[3, "speechtotext.benchmark.customBenchmarks.WhisperBenchmark.create_models"]], "module": [[3, "module-speechtotext.benchmark.benchmarks"], [3, "module-speechtotext.benchmark.customBenchmarks"], [4, "module-speechtotext.datasets"], [4, "module-speechtotext.functions"], [5, "module-speechtotext.metric.customMetrics"], [5, "module-speechtotext.metric.metrics"], [6, "module-speechtotext.model.amazonWrapper"], [6, "module-speechtotext.model.deepgramWrapper"], [6, "module-speechtotext.model.googleWrapper"], [6, "module-speechtotext.model.modelWrapper"], [6, "module-speechtotext.model.whisperWrapper"], [7, "module-speechtotext.plot.customPlots"], [7, "module-speechtotext.plot.plotting"]], "run_benchmarks() (in module speechtotext.benchmark.benchmarks)": [[3, "speechtotext.benchmark.benchmarks.run_benchmarks"]], "save_to_csv() (speechtotext.benchmark.benchmarks.benchmark method)": [[3, "speechtotext.benchmark.benchmarks.Benchmark.save_to_csv"]], "set_dataset() (speechtotext.benchmark.benchmarks.benchmark class method)": [[3, "speechtotext.benchmark.benchmarks.Benchmark.set_dataset"]], "speechtotext.benchmark.benchmarks": [[3, "module-speechtotext.benchmark.benchmarks"]], "speechtotext.benchmark.custombenchmarks": [[3, "module-speechtotext.benchmark.customBenchmarks"]], "update_samples() (speechtotext.benchmark.benchmarks.benchmark class method)": [[3, "speechtotext.benchmark.benchmarks.Benchmark.update_samples"]], "baseresult (class in speechtotext.functions)": [[4, "speechtotext.functions.BaseResult"]], "dataset (class in speechtotext.datasets)": [[4, "speechtotext.datasets.Dataset"]], "datasetbare (class in speechtotext.datasets)": [[4, "speechtotext.datasets.DatasetBare"]], "regex_string_parse (in module speechtotext.functions)": [[4, "speechtotext.functions.REGEX_STRING_PARSE"]], "requiredenvvariablesmissing": [[4, "speechtotext.functions.RequiredEnvVariablesMissing"]], "sampledataset (class in speechtotext.datasets)": [[4, "speechtotext.datasets.SampleDataset"]], "benchmark_results_to_csv() (in module speechtotext.functions)": [[4, "speechtotext.functions.benchmark_results_to_csv"]], "force_cudnn_initialization() (in module speechtotext.functions)": [[4, "speechtotext.functions.force_cudnn_initialization"]], "get_extention_of_file_name() (in module speechtotext.functions)": [[4, "speechtotext.functions.get_extention_of_file_name"]], "get_file_name_without_extention() (in module speechtotext.functions)": [[4, "speechtotext.functions.get_file_name_without_extention"]], "get_n_samples() (speechtotext.datasets.dataset method)": [[4, "speechtotext.datasets.Dataset.get_n_samples"]], "get_path_of_fragment() (speechtotext.datasets.datasetbare method)": [[4, "speechtotext.datasets.DatasetBare.get_path_of_fragment"]], "get_text_of_id() (speechtotext.datasets.datasetbare method)": [[4, "speechtotext.datasets.DatasetBare.get_text_of_id"]], "join_benchmark_results() (in module speechtotext.functions)": [[4, "speechtotext.functions.join_benchmark_results"]], "load_env_variable() (in module speechtotext.functions)": [[4, "speechtotext.functions.load_env_variable"]], "load_transcript() (speechtotext.datasets.dataset method)": [[4, "speechtotext.datasets.Dataset.load_transcript"]], "multidispatch() (in module speechtotext.functions)": [[4, "speechtotext.functions.multidispatch"]], "number_of_samples() (speechtotext.datasets.datasetbare method)": [[4, "speechtotext.datasets.DatasetBare.number_of_samples"]], "save() (speechtotext.functions.baseresult method)": [[4, "speechtotext.functions.BaseResult.save"]], "save_folder_name() (in module speechtotext.functions)": [[4, "speechtotext.functions.save_folder_name"]], "separate_benchmark_results_by_model() (in module speechtotext.functions)": [[4, "speechtotext.functions.separate_benchmark_results_by_model"]], "speechtotext.datasets": [[4, "module-speechtotext.datasets"]], "speechtotext.functions": [[4, "module-speechtotext.functions"]], "string_cleaning() (in module speechtotext.functions)": [[4, "speechtotext.functions.string_cleaning"]], "timing() (in module speechtotext.functions)": [[4, "speechtotext.functions.timing"]], "basemetrics (class in speechtotext.metric.custommetrics)": [[5, "speechtotext.metric.customMetrics.BaseMetrics"]], "benchmarkresults (class in speechtotext.metric.custommetrics)": [[5, "speechtotext.metric.customMetrics.BenchmarkResults"]], "defaultmetrics (class in speechtotext.metric.custommetrics)": [[5, "speechtotext.metric.customMetrics.DefaultMetrics"]], "metrics (class in speechtotext.metric.metrics)": [[5, "speechtotext.metric.metrics.Metrics"]], "cer (speechtotext.metric.metrics.metrics attribute)": [[5, "speechtotext.metric.metrics.Metrics.cer"]], "create_df() (speechtotext.metric.custommetrics.basemetrics method)": [[5, "speechtotext.metric.customMetrics.BaseMetrics.create_df"]], "create_df() (speechtotext.metric.custommetrics.benchmarkresults method)": [[5, "speechtotext.metric.customMetrics.BenchmarkResults.create_df"]], "create_df() (speechtotext.metric.custommetrics.defaultmetrics method)": [[5, "speechtotext.metric.customMetrics.DefaultMetrics.create_df"]], "mer (speechtotext.metric.metrics.metrics attribute)": [[5, "speechtotext.metric.metrics.Metrics.mer"]], "notebook_metrics_print() (in module speechtotext.metric.metrics)": [[5, "speechtotext.metric.metrics.notebook_metrics_print"]], "save() (speechtotext.metric.custommetrics.basemetrics method)": [[5, "speechtotext.metric.customMetrics.BaseMetrics.save"]], "speechtotext.metric.custommetrics": [[5, "module-speechtotext.metric.customMetrics"]], "speechtotext.metric.metrics": [[5, "module-speechtotext.metric.metrics"]], "wer (speechtotext.metric.metrics.metrics attribute)": [[5, "speechtotext.metric.metrics.Metrics.wer"]], "wil (speechtotext.metric.metrics.metrics attribute)": [[5, "speechtotext.metric.metrics.Metrics.wil"]], "wip (speechtotext.metric.metrics.metrics attribute)": [[5, "speechtotext.metric.metrics.Metrics.wip"]], "amazon_default (speechtotext.model.amazonwrapper.amazonapiversion attribute)": [[6, "speechtotext.model.amazonWrapper.AmazonAPIVersion.AMAZON_DEFAULT"]], "amazonapiversion (class in speechtotext.model.amazonwrapper)": [[6, "speechtotext.model.amazonWrapper.AmazonAPIVersion"]], "amazonapiwrapper (class in speechtotext.model.amazonwrapper)": [[6, "speechtotext.model.amazonWrapper.AmazonAPIWrapper"]], "base (speechtotext.model.whisperwrapper.whisperversion attribute)": [[6, "speechtotext.model.whisperWrapper.WhisperVersion.BASE"]], "bucket_exist (speechtotext.model.amazonwrapper.amazonapiwrapper attribute)": [[6, "speechtotext.model.amazonWrapper.AmazonAPIWrapper.BUCKET_EXIST"]], "deepgram_default (speechtotext.model.deepgramwrapper.deepgramapiversion attribute)": [[6, "speechtotext.model.deepgramWrapper.DeepgramAPIVersion.DEEPGRAM_DEFAULT"]], "deepgram_enhanced (speechtotext.model.deepgramwrapper.deepgramapiversion attribute)": [[6, "speechtotext.model.deepgramWrapper.DeepgramAPIVersion.DEEPGRAM_ENHANCED"]], "deepgramapiversion (class in speechtotext.model.deepgramwrapper)": [[6, "speechtotext.model.deepgramWrapper.DeepgramAPIVersion"]], "deepgramapiwrapper (class in speechtotext.model.deepgramwrapper)": [[6, "speechtotext.model.deepgramWrapper.DeepgramAPIWrapper"]], "google_default (speechtotext.model.googlewrapper.googleapiversion attribute)": [[6, "speechtotext.model.googleWrapper.GoogleAPIVersion.GOOGLE_DEFAULT"]], "googleapiversion (class in speechtotext.model.googlewrapper)": [[6, "speechtotext.model.googleWrapper.GoogleAPIVersion"]], "googleapiwrapper (class in speechtotext.model.googlewrapper)": [[6, "speechtotext.model.googleWrapper.GoogleAPIWrapper"]], "language_code (speechtotext.model.amazonwrapper.amazonapiwrapper attribute)": [[6, "speechtotext.model.amazonWrapper.AmazonAPIWrapper.LANGUAGE_CODE"]], "language_code (speechtotext.model.deepgramwrapper.deepgramapiwrapper attribute)": [[6, "speechtotext.model.deepgramWrapper.DeepgramAPIWrapper.LANGUAGE_CODE"]], "language_code (speechtotext.model.googlewrapper.googleapiwrapper attribute)": [[6, "speechtotext.model.googleWrapper.GoogleAPIWrapper.LANGUAGE_CODE"]], "large (speechtotext.model.whisperwrapper.whisperversion attribute)": [[6, "speechtotext.model.whisperWrapper.WhisperVersion.LARGE"]], "medium (speechtotext.model.whisperwrapper.whisperversion attribute)": [[6, "speechtotext.model.whisperWrapper.WhisperVersion.MEDIUM"]], "modelversion (class in speechtotext.model.modelwrapper)": [[6, "speechtotext.model.modelWrapper.ModelVersion"]], "modelwrapper (class in speechtotext.model.modelwrapper)": [[6, "speechtotext.model.modelWrapper.ModelWrapper"]], "small (speechtotext.model.whisperwrapper.whisperversion attribute)": [[6, "speechtotext.model.whisperWrapper.WhisperVersion.SMALL"]], "tiny (speechtotext.model.whisperwrapper.whisperversion attribute)": [[6, "speechtotext.model.whisperWrapper.WhisperVersion.TINY"]], "whisper_1 (speechtotext.model.whisperwrapper.whisperapiversion attribute)": [[6, "speechtotext.model.whisperWrapper.WhisperAPIVersion.WHISPER_1"]], "whisperapiversion (class in speechtotext.model.whisperwrapper)": [[6, "speechtotext.model.whisperWrapper.WhisperAPIVersion"]], "whisperapiwrapper (class in speechtotext.model.whisperwrapper)": [[6, "speechtotext.model.whisperWrapper.WhisperAPIWrapper"]], "whisperversion (class in speechtotext.model.whisperwrapper)": [[6, "speechtotext.model.whisperWrapper.WhisperVersion"]], "whisperwrapper (class in speechtotext.model.whisperwrapper)": [[6, "speechtotext.model.whisperWrapper.WhisperWrapper"]], "benchmark_n_samples() (speechtotext.model.modelwrapper.modelwrapper method)": [[6, "speechtotext.model.modelWrapper.ModelWrapper.benchmark_n_samples"]], "benchmark_sample() (speechtotext.model.modelwrapper.modelwrapper method)": [[6, "speechtotext.model.modelWrapper.ModelWrapper.benchmark_sample"]], "benchmark_samples() (speechtotext.model.modelwrapper.modelwrapper method)": [[6, "speechtotext.model.modelWrapper.ModelWrapper.benchmark_samples"]], "get_model() (speechtotext.model.amazonwrapper.amazonapiwrapper method)": [[6, "speechtotext.model.amazonWrapper.AmazonAPIWrapper.get_model"]], "get_model() (speechtotext.model.deepgramwrapper.deepgramapiwrapper method)": [[6, "speechtotext.model.deepgramWrapper.DeepgramAPIWrapper.get_model"]], "get_model() (speechtotext.model.googlewrapper.googleapiwrapper method)": [[6, "speechtotext.model.googleWrapper.GoogleAPIWrapper.get_model"]], "get_model() (speechtotext.model.modelwrapper.modelwrapper method)": [[6, "speechtotext.model.modelWrapper.ModelWrapper.get_model"]], "get_model() (speechtotext.model.whisperwrapper.whisperapiwrapper method)": [[6, "speechtotext.model.whisperWrapper.WhisperAPIWrapper.get_model"]], "get_model() (speechtotext.model.whisperwrapper.whisperwrapper method)": [[6, "speechtotext.model.whisperWrapper.WhisperWrapper.get_model"]], "get_transcript_of_file() (speechtotext.model.amazonwrapper.amazonapiwrapper method)": [[6, "speechtotext.model.amazonWrapper.AmazonAPIWrapper.get_transcript_of_file"]], "get_transcript_of_file() (speechtotext.model.deepgramwrapper.deepgramapiwrapper method)": [[6, "speechtotext.model.deepgramWrapper.DeepgramAPIWrapper.get_transcript_of_file"]], "get_transcript_of_file() (speechtotext.model.googlewrapper.googleapiwrapper method)": [[6, "speechtotext.model.googleWrapper.GoogleAPIWrapper.get_transcript_of_file"]], "get_transcript_of_file() (speechtotext.model.modelwrapper.modelwrapper method)": [[6, "speechtotext.model.modelWrapper.ModelWrapper.get_transcript_of_file"]], "get_transcript_of_file() (speechtotext.model.whisperwrapper.whisperapiwrapper method)": [[6, "speechtotext.model.whisperWrapper.WhisperAPIWrapper.get_transcript_of_file"]], "get_transcript_of_file() (speechtotext.model.whisperwrapper.whisperwrapper method)": [[6, "speechtotext.model.whisperWrapper.WhisperWrapper.get_transcript_of_file"]], "speechtotext.model.amazonwrapper": [[6, "module-speechtotext.model.amazonWrapper"]], "speechtotext.model.deepgramwrapper": [[6, "module-speechtotext.model.deepgramWrapper"]], "speechtotext.model.googlewrapper": [[6, "module-speechtotext.model.googleWrapper"]], "speechtotext.model.modelwrapper": [[6, "module-speechtotext.model.modelWrapper"]], "speechtotext.model.whisperwrapper": [[6, "module-speechtotext.model.whisperWrapper"]], "basematplotlib (class in speechtotext.plot.plotting)": [[7, "speechtotext.plot.plotting.BaseMatPlotLib"]], "baseplotly (class in speechtotext.plot.plotting)": [[7, "speechtotext.plot.plotting.BasePlotly"]], "custom_results (speechtotext.plot.plotting.plotting attribute)": [[7, "speechtotext.plot.plotting.Plotting.CUSTOM_RESULTS"]], "cerbymodelnamebydataset (class in speechtotext.plot.customplots)": [[7, "speechtotext.plot.customPlots.CerByModelnameByDataset"]], "durationbymodelnamebydataset (class in speechtotext.plot.customplots)": [[7, "speechtotext.plot.customPlots.DurationByModelnameByDataset"]], "meanofmetricbymodelname (class in speechtotext.plot.customplots)": [[7, "speechtotext.plot.customPlots.MeanOfMetricByModelname"]], "merbymodelnamebydataset (class in speechtotext.plot.customplots)": [[7, "speechtotext.plot.customPlots.MerByModelnameByDataset"]], "plotting (class in speechtotext.plot.plotting)": [[7, "speechtotext.plot.plotting.Plotting"]], "werbymodelnamebydataset (class in speechtotext.plot.customplots)": [[7, "speechtotext.plot.customPlots.WerByModelnameByDataset"]], "wilbymodelnamebydataset (class in speechtotext.plot.customplots)": [[7, "speechtotext.plot.customPlots.WilByModelnameByDataset"]], "wipbymodelnamebydataset (class in speechtotext.plot.customplots)": [[7, "speechtotext.plot.customPlots.WipByModelnameByDataset"]], "create_plot() (speechtotext.plot.customplots.cerbymodelnamebydataset method)": [[7, "speechtotext.plot.customPlots.CerByModelnameByDataset.create_plot"]], "create_plot() (speechtotext.plot.customplots.durationbymodelnamebydataset method)": [[7, "speechtotext.plot.customPlots.DurationByModelnameByDataset.create_plot"]], "create_plot() (speechtotext.plot.customplots.meanofmetricbymodelname method)": [[7, "speechtotext.plot.customPlots.MeanOfMetricByModelname.create_plot"]], "create_plot() (speechtotext.plot.customplots.merbymodelnamebydataset method)": [[7, "speechtotext.plot.customPlots.MerByModelnameByDataset.create_plot"]], "create_plot() (speechtotext.plot.customplots.werbymodelnamebydataset method)": [[7, "speechtotext.plot.customPlots.WerByModelnameByDataset.create_plot"]], "create_plot() (speechtotext.plot.customplots.wilbymodelnamebydataset method)": [[7, "speechtotext.plot.customPlots.WilByModelnameByDataset.create_plot"]], "create_plot() (speechtotext.plot.customplots.wipbymodelnamebydataset method)": [[7, "speechtotext.plot.customPlots.WipByModelnameByDataset.create_plot"]], "create_plot() (speechtotext.plot.plotting.basematplotlib method)": [[7, "speechtotext.plot.plotting.BaseMatPlotLib.create_plot"]], "create_plot() (speechtotext.plot.plotting.baseplotly method)": [[7, "speechtotext.plot.plotting.BasePlotly.create_plot"]], "launch_dtale() (speechtotext.plot.plotting.plotting method)": [[7, "speechtotext.plot.plotting.Plotting.launch_dtale"]], "save() (speechtotext.plot.plotting.basematplotlib method)": [[7, "speechtotext.plot.plotting.BaseMatPlotLib.save"]], "save() (speechtotext.plot.plotting.baseplotly method)": [[7, "speechtotext.plot.plotting.BasePlotly.save"]], "save_all() (speechtotext.plot.plotting.plotting method)": [[7, "speechtotext.plot.plotting.Plotting.save_all"]], "speechtotext.plot.customplots": [[7, "module-speechtotext.plot.customPlots"]], "speechtotext.plot.plotting": [[7, "module-speechtotext.plot.plotting"]]}})