Search.setIndex({"docnames": ["examples", "index", "installation", "requirements", "speechtotext/benchmark/index", "speechtotext/index", "speechtotext/metric/index", "speechtotext/model/index", "speechtotext/plot/index"], "filenames": ["examples.rst", "index.rst", "installation.rst", "requirements.rst", "speechtotext/benchmark/index.rst", "speechtotext/index.rst", "speechtotext/metric/index.rst", "speechtotext/model/index.rst", "speechtotext/plot/index.rst"], "titles": ["Code Examples for speechtotext", "Welcome to speechtotext\u2019s documentation!", "Installation for speechtotext", "Requirements for speechtotext", "speechtotext benchmark package", "speechtotext package", "speechtotext metric package", "speechtotext model package", "speechtotext plot package"], "terms": {"thi": [0, 3, 4, 5, 6, 7, 8], "page": [0, 1], "i": [0, 3, 4, 5, 7, 8], "an": [0, 3, 4, 5, 8], "collect": 0, "how": 0, "packag": [0, 3], "The": [0, 5, 6], "env": [0, 5, 7], "file": [0, 3, 5, 6, 7], "might": 0, "have": 0, "load": [0, 5], "befor": 0, "run": [0, 4, 7], "from": [0, 4, 5, 6, 7, 8], "dotenv": 0, "import": [0, 4, 5, 6, 7, 8], "load_dotenv": 0, "modul": [0, 1, 4, 5, 6, 7, 8], "like": [0, 4, 5, 6, 7, 8], "dataset": [0, 1, 3, 4, 6, 7], "custombenchmark": [0, 1], "run_benchmark": [0, 4], "function": [0, 1, 6, 8], "force_cudnn_initi": [0, 5], "plot": [0, 1, 6], "metric": [0, 1, 4, 7, 8], "custommetr": [0, 1, 8], "path_to_dir": [0, 4, 5, 7], "path": [0, 3, 4, 5, 7], "name": [0, 2, 3, 4, 5, 7], "dataset_nam": [0, 4, 5, 7], "set": [0, 4, 5, 7], "number_of_sampl": [0, 4, 5, 7], "100": 0, "report_nam": [0, 4, 5, 8], "benchmark_nam": 0, "benchmark_class_list": [0, 4], "list": [0, 4, 5, 7, 8], "whisperbenchmark": [0, 4], "whisperapibenchmark": [0, 4], "result": [0, 4, 5, 6, 7, 8], "save_al": [0, 8], "To": [0, 4], "follow": [0, 3, 5], "class": [0, 4, 5, 6, 7, 8], "need": [0, 6, 7, 8], "made": [0, 8], "modelvers": [0, 7], "load_env_vari": [0, 5], "version": [0, 7], "custommodelvers": 0, "model_version_1": 0, "version_1": 0, "model_version_2": 0, "version_2": 0, "model_version_enhanc": 0, "enhanc": [0, 7], "custommodelwrapp": 0, "language_cod": [0, 7], "str": [0, 4, 5, 6, 7, 8], "nl": [0, 7], "def": [0, 6, 7, 8], "__init__": [0, 7], "self": [0, 6, 7, 8], "model_vers": [0, 7], "forc": [0, 5], "correct": [0, 7], "super": 0, "get_model": [0, 7], "setup": 0, "api": [0, 4, 7], "call": [0, 7], "api_kei": 0, "model_api_kei": 0, "get_transcript_of_fil": [0, 7], "audio_file_nam": [0, 7], "get": [0, 5, 7], "transcript": [0, 3, 5, 6, 7], "audio": [0, 5, 6, 7], "transcrib": [0, 4, 7], "return": [0, 3, 4, 5, 6, 7, 8], "text": [0, 5, 7], "custommodelbenchmark": 0, "model_bas": [0, 4, 7], "create_model": [0, 4, 7], "append": [0, 6, 7, 8], "requir": [1, 5], "code": [1, 8], "exampl": [1, 5], "model": [1, 3, 4, 5, 6, 8], "modelwrapp": [1, 4], "whisperwrapp": 1, "amazonwrapp": 1, "googlewrapp": 1, "deepgramwrapp": 1, "assemblyaiwrapp": 1, "azurewrapp": 1, "speechmaticswrapp": 1, "benchmark": [1, 5, 6, 7, 8], "customplot": 1, "customerrorplot": 1, "index": [1, 5], "search": 1, "folder": [3, 5, 6, 8], "txt": [3, 5], "test": [3, 4, 5], "directori": [3, 7], "python": [2, 3, 7], "script": [3, 7], "openai_api_kei": [3, 7], "sk": 3, "somemorerandomnumberlettersandmorerandomnessform": 3, "openai_organ": [3, 7], "org": 3, "somerandomnumberandlett": 3, "aws_access_key_id": [3, 7], "access": 3, "id": [3, 5, 6, 7], "aws_secret_access_kei": [3, 7], "acc": 3, "kei": [3, 5], "amazon_region": [3, 7], "eu": 3, "west": 3, "3": [2, 3, 7], "amazon_bucket": [3, 7], "bucket": 3, "For": 3, "foo": 3, "command": 3, "region": 3, "curl": 3, "si": 3, "s3": 3, "amazonaw": 3, "com": [3, 7], "awk": 3, "x": [3, 8], "amz": 3, "print": [3, 4, 5, 6], "2": [2, 3], "servic": 3, "account": 3, "link": [3, 5], "cloud": 3, "doc": 3, "google_application_credenti": [3, 7], "keyfil": 3, "json": 3, "deepgram_api_kei": [3, 7], "assembly_ai_api_kei": [3, 7], "azure_speech_kei": [3, 7], "azure_speech_region": [3, 7], "speechmatics_api_kei": [3, 7], "us": [4, 5, 6, 7, 8], "10": [4, 5, 7], "report": [4, 5, 6], "dir": [4, 5, 7], "set_dataset": [4, 7], "creat": [4, 5, 6, 7, 8], "wb": 4, "convert": [4, 7], "panda": [4, 5, 8], "datafram": [4, 5, 6, 8], "df": [4, 5, 6, 8], "convert_to_panda": 4, "save": [4, 5, 6, 8], "csv": [4, 5], "datetim": 4, "benchmark_results_to_csv": [4, 5], "5": 4, "benchmark_dataset": 4, "dataset_rdh": 4, "with_clean": [4, 6, 7], "true": [4, 5, 6, 7], "base": [4, 5, 6, 7, 8], "abc": [4, 5, 7], "valid": [4, 5], "parent": [4, 5, 7, 8], "all": [4, 5, 8], "benchmark_sampl": [4, 7], "none": 4, "error_list": 4, "core": [4, 5, 6, 8], "frame": [4, 5, 6, 8], "type": [4, 5, 6, 7, 8], "pd": [4, 5, 6], "abstract": [4, 5, 6, 7, 8], "wrapper": [4, 7], "save_to_csv": 4, "save_nam": [4, 5], "output": [4, 5], "paramet": [4, 5, 6, 7], "filenam": [4, 5], "classmethod": 4, "update_sampl": 4, "int": [4, 5, 7], "updat": 4, "sampl": [4, 5, 7], "number": [4, 5, 7], "al": 4, "out": 4, "benchmark_list": 4, "error": [4, 6, 7, 8], "amazonapibenchmark": 4, "amazon": [4, 7], "amazonapi": [4, 7], "assemblyaiapibenchmark": 4, "assemblyai": [4, 7], "assemblyaiapi": 4, "azureapibenchmark": 4, "azur": [4, 7], "azureapi": [4, 7], "deepgramapibenchmark": 4, "deepgram": [4, 7], "deepgramapi": 4, "googleapibenchmark": 4, "googl": [4, 7], "googleapi": [4, 7], "speechmaticsapibenchmark": 4, "speechmat": [4, 7], "speechmaticsapi": [4, 7], "whisper": [4, 7], "whisperapi": 4, "local": [4, 7], "speech2text": 5, "torch": 5, "cuda": 5, "clean": [5, 7], "string": 5, "string_clean": 5, "ha": 5, "8": 5, "regex_string_pars": 5, "regex": 5, "parc": 5, "up": 5, "ar": [5, 8], "baseresult": [5, 6, 8], "report_fold": [5, 6, 8], "file_nam": [5, 6, 8], "except": 5, "requiredenvvariablesmiss": 5, "env_nam": 5, "when": 5, "variabl": 5, "miss": 5, "benchmark_results_2023_04_17_13_42_08": [], "option": [5, 7], "default": [5, 6, 7], "default_csv_nam": 5, "get_extention_of_file_nam": 5, "extent": 5, "tile": 5, "get_file_name_without_extent": 5, "join_benchmark_result": 5, "set_index": 5, "join": 5, "bool": [5, 7], "model_nam": [5, 7, 8], "audio_id": [5, 6], "can": [5, 8], "rais": 5, "its": 5, "valu": [5, 7], "multidispatch": 5, "allow": 5, "method": 5, "overload": 5, "save_folder_nam": 5, "folder_nam": 5, "make": 5, "default_report_fold": 5, "save_sub_folder_nam": 5, "folder_path": 5, "subfolder_nam": 5, "subfold": 5, "separate_benchmark_results_by_model": 5, "dict": 5, "seper": 5, "each": [5, 7], "stt": [5, 7], "unclean": 5, "time": 5, "f": 5, "durat": [5, 6], "In": 5, "rel": 5, "audiofil": 5, "entri": 5, "20000_mijlen": 5, "20000_mijlen_0001": 5, "wav": 5, "trancsript": 5, "existing_id": 5, "get_path_of_frag": 5, "get_text_of_id": 5, "n": [5, 7], "trandom": 5, "dataset_n_random": 5, "sampledataset": [5, 7], "get_n_sampl": 5, "file_ext": 5, "datasetbar": 5, "extract": 5, "data": [5, 8], "random": [5, 7], "load_transcript": 5, "object": [5, 6, 8], "bare": 5, "fragment": 5, "filenotfounderror": 5, "doesn": 5, "t": 5, "exist": 5, "spoken": 5, "calcul": 6, "m": 6, "de": 6, "stoel": 6, "heeft": 6, "krassen": 6, "gemaakt": 6, "op": 6, "vloer": 6, "id_from_dataset": 6, "refer": 6, "hypothesi": 6, "float": 6, "calul": 6, "attribut": 6, "class_attribut": 6, "wer": [6, 8], "word": 6, "rate": 6, "mer": 6, "match": 6, "wil": 6, "inform": 6, "lost": 6, "wip": 6, "preserv": 6, "cer": 6, "charact": 6, "notebook_metrics_print": 6, "custom": [6, 7, 8], "matplotlib": [6, 8], "pictur": [6, 8], "benchmarkresult": [6, 8], "basemetr": 6, "create_df": 6, "add": [6, 8], "custom_result": [6, 8], "errormetr": 6, "statist": 6, "resultmetr": [6, 8], "implement": 7, "modulewrapp": 7, "child": [7, 8], "childmodelvers": 7, "demo": 7, "childmodelwrapp": 7, "modeltyp": 7, "childbenchmark": 7, "enum": 7, "avail": [5, 7], "If": 7, "convert_sampl": 7, "benchmark_n_sampl": 7, "benchmerk": 7, "path_to_sampl": 7, "overrid": 7, "fals": 7, "format": 7, "origin": 7, "existing_audio_id": 7, "whispervers": 7, "tini": 7, "choisen": 7, "arrai": 7, "whisperapivers": 7, "whisper_1": 7, "1": 7, "whisperapiwrapp": 7, "current": 7, "larg": 7, "medium": 7, "small": 7, "amazonapivers": 7, "amazon_default": 7, "languag": 7, "amazonapiwrapp": 7, "bucket_exist": 7, "googleapivers": 7, "google_default": 7, "googleapiwrapp": 7, "BE": 7, "deepgramapivers": 7, "deepgram_default": 7, "gener": [7, 8], "deepgram_enhanc": 7, "deepgramapiwrapp": 7, "assemblyaiapivers": 7, "assemblyai_default": 7, "assemblyaiapiwrapp": 7, "api_url": 7, "http": 7, "v2": 7, "upload": 7, "polling_endpoint": 7, "time_sleep": 7, "transcript_endpoint": 7, "upload_endpoint": 7, "azureapivers": 7, "azure_default": 7, "param": 7, "azureapiwrapp": 7, "6": 7, "4": 7, "7": 7, "0": 7, "speechmaticsapivers": 7, "speechmatics_default": 7, "speechmaticsapiwrapp": 7, "connection_url": 7, "wss": 7, "eu2": 7, "rt": 7, "baseplot": 8, "ad": 8, "custom_plot": 8, "basematplotlib": 8, "should": 8, "create_plot": 8, "figur": 8, "plotli": 8, "graph_obj": 8, "_figur": 8, "baseplotli": 8, "d": 8, "tale": 8, "custom_error": 8, "custom_error_plot": 8, "launch_dtal": 8, "launch": 8, "webui": 8, "explor": 8, "loop": 8, "over": 8, "boxplotofmodelsw": 8, "sn": 8, "boxplot": 8, "y": 8, "fig": 8, "get_figur": 8, "save_plot": 8, "savefig": 8, "save_file_nam": 8, "demoplotlyexampl": 8, "px": 8, "gapmind": 8, "queri": 8, "countri": 8, "canada": 8, "line": 8, "year": 8, "lifeexp": 8, "titl": 8, "life": 8, "expect": 8, "cerbymodelnamebydataset": 8, "durationbymodelnamebydataset": 8, "durationlogbymodelnamebydataset": 8, "meanofmetricbymodelnam": 8, "merbymodelnamebydataset": 8, "werbymodelnamebydataset": 8, "wilbymodelnamebydataset": 8, "wipbymodelnamebydataset": 8, "errorcountbymodel": 8, "errorcountbymodelbydataset": 8, "errorcountheatmap": 8, "instal": 1, "sample_env": 2, "channel": 2, "depend": 2, "11": 2, "9": 2, "benchmark_results_2023_04_17_15_29_57": [], "benchmark_results_2023_04_18_08_11_36": [], "benchmark_results_2023_04_20_11_36_39": 5}, "objects": {"speechtotext.benchmark": [[4, 0, 0, "-", "benchmarks"], [4, 0, 0, "-", "customBenchmarks"]], "speechtotext.benchmark.benchmarks": [[4, 1, 1, "", "Benchmark"], [4, 4, 1, "", "run_benchmarks"]], "speechtotext.benchmark.benchmarks.Benchmark": [[4, 2, 1, "", "BENCHMARK_SAMPLES"], [4, 2, 1, "", "DATASET"], [4, 2, 1, "", "ERROR_LIST"], [4, 3, 1, "", "convert_to_pandas"], [4, 3, 1, "", "create_models"], [4, 3, 1, "", "save_to_csv"], [4, 3, 1, "", "set_dataset"], [4, 3, 1, "", "update_samples"]], "speechtotext.benchmark.customBenchmarks": [[4, 1, 1, "", "AmazonAPIBenchmark"], [4, 1, 1, "", "AssemblyAIAPIBenchmark"], [4, 1, 1, "", "AzureAPIBenchmark"], [4, 1, 1, "", "DeepgramAPIBenchmark"], [4, 1, 1, "", "GoogleAPIBenchmark"], [4, 1, 1, "", "SpeechmaticsAPIBenchmark"], [4, 1, 1, "", "WhisperAPIBenchmark"], [4, 1, 1, "", "WhisperBenchmark"]], "speechtotext.benchmark.customBenchmarks.AmazonAPIBenchmark": [[4, 2, 1, "", "MODEL_BASE"], [4, 3, 1, "", "create_models"]], "speechtotext.benchmark.customBenchmarks.AssemblyAIAPIBenchmark": [[4, 2, 1, "", "MODEL_BASE"], [4, 3, 1, "", "create_models"]], "speechtotext.benchmark.customBenchmarks.AzureAPIBenchmark": [[4, 2, 1, "", "MODEL_BASE"], [4, 3, 1, "", "create_models"]], "speechtotext.benchmark.customBenchmarks.DeepgramAPIBenchmark": [[4, 2, 1, "", "MODEL_BASE"], [4, 3, 1, "", "create_models"]], "speechtotext.benchmark.customBenchmarks.GoogleAPIBenchmark": [[4, 2, 1, "", "MODEL_BASE"], [4, 3, 1, "", "create_models"]], "speechtotext.benchmark.customBenchmarks.SpeechmaticsAPIBenchmark": [[4, 2, 1, "", "MODEL_BASE"], [4, 3, 1, "", "create_models"]], "speechtotext.benchmark.customBenchmarks.WhisperAPIBenchmark": [[4, 2, 1, "", "MODEL_BASE"], [4, 3, 1, "", "create_models"]], "speechtotext.benchmark.customBenchmarks.WhisperBenchmark": [[4, 2, 1, "", "MODEL_BASE"], [4, 3, 1, "", "create_models"]], "speechtotext": [[5, 0, 0, "-", "datasets"], [5, 0, 0, "-", "functions"]], "speechtotext.datasets": [[5, 1, 1, "", "Dataset"], [5, 1, 1, "", "DatasetBare"], [5, 1, 1, "", "SampleDataset"]], "speechtotext.datasets.Dataset": [[5, 3, 1, "", "get_n_samples"], [5, 3, 1, "", "load_transcript"]], "speechtotext.datasets.DatasetBare": [[5, 3, 1, "", "get_path_of_fragment"], [5, 3, 1, "", "get_text_of_id"], [5, 3, 1, "", "number_of_samples"]], "speechtotext.functions": [[5, 1, 1, "", "BaseResult"], [5, 2, 1, "", "REGEX_STRING_PARSE"], [5, 5, 1, "", "RequiredEnvVariablesMissing"], [5, 4, 1, "", "benchmark_results_to_csv"], [5, 4, 1, "", "force_cudnn_initialization"], [5, 4, 1, "", "get_extention_of_file_name"], [5, 4, 1, "", "get_file_name_without_extention"], [5, 4, 1, "", "join_benchmark_results"], [5, 4, 1, "", "load_env_variable"], [5, 4, 1, "", "multidispatch"], [5, 4, 1, "", "save_folder_name"], [5, 4, 1, "", "save_sub_folder_name"], [5, 4, 1, "", "separate_benchmark_results_by_model"], [5, 4, 1, "", "string_cleaning"], [5, 4, 1, "", "timing"]], "speechtotext.functions.BaseResult": [[5, 3, 1, "", "save"]], "speechtotext.metric": [[6, 0, 0, "-", "customMetrics"], [6, 0, 0, "-", "metrics"]], "speechtotext.metric.customMetrics": [[6, 1, 1, "", "BaseMetrics"], [6, 1, 1, "", "BenchmarkResults"], [6, 1, 1, "", "ErrorMetrics"], [6, 1, 1, "", "ResultMetrics"]], "speechtotext.metric.customMetrics.BaseMetrics": [[6, 3, 1, "", "create_df"], [6, 3, 1, "", "save"]], "speechtotext.metric.customMetrics.BenchmarkResults": [[6, 3, 1, "", "create_df"]], "speechtotext.metric.customMetrics.ErrorMetrics": [[6, 3, 1, "", "create_df"]], "speechtotext.metric.customMetrics.ResultMetrics": [[6, 3, 1, "", "create_df"]], "speechtotext.metric.metrics": [[6, 1, 1, "", "Metrics"], [6, 4, 1, "", "notebook_metrics_print"]], "speechtotext.metric.metrics.Metrics": [[6, 2, 1, "", "cer"], [6, 2, 1, "", "mer"], [6, 2, 1, "", "wer"], [6, 2, 1, "", "wil"], [6, 2, 1, "", "wip"]], "speechtotext.model": [[7, 0, 0, "-", "amazonWrapper"], [7, 0, 0, "-", "assemblyAIWrapper"], [7, 0, 0, "-", "azureWrapper"], [7, 0, 0, "-", "deepgramWrapper"], [7, 0, 0, "-", "googleWrapper"], [7, 0, 0, "-", "modelWrapper"], [7, 0, 0, "-", "speechmaticsWrapper"], [7, 0, 0, "-", "whisperWrapper"]], "speechtotext.model.amazonWrapper": [[7, 1, 1, "", "AmazonAPIVersion"], [7, 1, 1, "", "AmazonAPIWrapper"]], "speechtotext.model.amazonWrapper.AmazonAPIVersion": [[7, 2, 1, "", "AMAZON_DEFAULT"]], "speechtotext.model.amazonWrapper.AmazonAPIWrapper": [[7, 2, 1, "", "BUCKET_EXIST"], [7, 2, 1, "", "LANGUAGE_CODE"], [7, 3, 1, "", "get_model"], [7, 3, 1, "", "get_transcript_of_file"]], "speechtotext.model.assemblyAIWrapper": [[7, 1, 1, "", "AssemblyAIAPIVersion"], [7, 1, 1, "", "AssemblyAIAPIWrapper"]], "speechtotext.model.assemblyAIWrapper.AssemblyAIAPIVersion": [[7, 2, 1, "", "ASSEMBLYAI_DEFAULT"]], "speechtotext.model.assemblyAIWrapper.AssemblyAIAPIWrapper": [[7, 2, 1, "", "API_URL"], [7, 2, 1, "", "LANGUAGE_CODE"], [7, 2, 1, "", "POLLING_ENDPOINT"], [7, 2, 1, "", "TIME_SLEEP"], [7, 2, 1, "", "TRANSCRIPT_ENDPOINT"], [7, 2, 1, "", "UPLOAD_ENDPOINT"], [7, 3, 1, "", "get_model"], [7, 3, 1, "", "get_transcript_of_file"]], "speechtotext.model.azureWrapper": [[7, 1, 1, "", "AzureAPIVersion"], [7, 1, 1, "", "AzureAPIWrapper"]], "speechtotext.model.azureWrapper.AzureAPIVersion": [[7, 2, 1, "", "AZURE_DEFAULT"]], "speechtotext.model.azureWrapper.AzureAPIWrapper": [[7, 2, 1, "", "LANGUAGE_CODE"], [7, 3, 1, "", "get_model"], [7, 3, 1, "", "get_transcript_of_file"]], "speechtotext.model.deepgramWrapper": [[7, 1, 1, "", "DeepgramAPIVersion"], [7, 1, 1, "", "DeepgramAPIWrapper"]], "speechtotext.model.deepgramWrapper.DeepgramAPIVersion": [[7, 2, 1, "", "DEEPGRAM_DEFAULT"], [7, 2, 1, "", "DEEPGRAM_ENHANCED"]], "speechtotext.model.deepgramWrapper.DeepgramAPIWrapper": [[7, 2, 1, "", "LANGUAGE_CODE"], [7, 3, 1, "", "get_model"], [7, 3, 1, "", "get_transcript_of_file"]], "speechtotext.model.googleWrapper": [[7, 1, 1, "", "GoogleAPIVersion"], [7, 1, 1, "", "GoogleAPIWrapper"]], "speechtotext.model.googleWrapper.GoogleAPIVersion": [[7, 2, 1, "", "GOOGLE_DEFAULT"]], "speechtotext.model.googleWrapper.GoogleAPIWrapper": [[7, 2, 1, "", "LANGUAGE_CODE"], [7, 3, 1, "", "get_model"], [7, 3, 1, "", "get_transcript_of_file"]], "speechtotext.model.modelWrapper": [[7, 1, 1, "", "ModelVersion"], [7, 1, 1, "", "ModelWrapper"]], "speechtotext.model.modelWrapper.ModelWrapper": [[7, 3, 1, "", "benchmark_n_samples"], [7, 3, 1, "", "benchmark_sample"], [7, 3, 1, "", "benchmark_samples"], [7, 3, 1, "", "convert_sample"], [7, 3, 1, "", "get_model"], [7, 3, 1, "", "get_transcript_of_file"]], "speechtotext.model.speechmaticsWrapper": [[7, 1, 1, "", "SpeechmaticsAPIVersion"], [7, 1, 1, "", "SpeechmaticsAPIWrapper"]], "speechtotext.model.speechmaticsWrapper.SpeechmaticsAPIVersion": [[7, 2, 1, "", "SPEECHMATICS_DEFAULT"]], "speechtotext.model.speechmaticsWrapper.SpeechmaticsAPIWrapper": [[7, 2, 1, "", "CONNECTION_URL"], [7, 2, 1, "", "LANGUAGE_CODE"], [7, 3, 1, "", "get_model"], [7, 3, 1, "", "get_transcript_of_file"]], "speechtotext.model.whisperWrapper": [[7, 1, 1, "", "WhisperAPIVersion"], [7, 1, 1, "", "WhisperAPIWrapper"], [7, 1, 1, "", "WhisperVersion"], [7, 1, 1, "", "WhisperWrapper"]], "speechtotext.model.whisperWrapper.WhisperAPIVersion": [[7, 2, 1, "", "WHISPER_1"]], "speechtotext.model.whisperWrapper.WhisperAPIWrapper": [[7, 3, 1, "", "get_model"], [7, 3, 1, "", "get_transcript_of_file"]], "speechtotext.model.whisperWrapper.WhisperVersion": [[7, 2, 1, "", "BASE"], [7, 2, 1, "", "LARGE"], [7, 2, 1, "", "MEDIUM"], [7, 2, 1, "", "SMALL"], [7, 2, 1, "", "TINY"]], "speechtotext.model.whisperWrapper.WhisperWrapper": [[7, 3, 1, "", "get_model"], [7, 3, 1, "", "get_transcript_of_file"]], "speechtotext.plot": [[8, 0, 0, "-", "customErrorPlots"], [8, 0, 0, "-", "customPlots"], [8, 0, 0, "-", "plotting"]], "speechtotext.plot.customErrorPlots": [[8, 1, 1, "", "ErrorCountByModel"], [8, 1, 1, "", "ErrorCountByModelByDataset"], [8, 1, 1, "", "ErrorCountHeatmap"]], "speechtotext.plot.customErrorPlots.ErrorCountByModel": [[8, 3, 1, "", "create_plot"]], "speechtotext.plot.customErrorPlots.ErrorCountByModelByDataset": [[8, 3, 1, "", "create_plot"]], "speechtotext.plot.customErrorPlots.ErrorCountHeatmap": [[8, 3, 1, "", "create_plot"]], "speechtotext.plot.customPlots": [[8, 1, 1, "", "CerByModelnameByDataset"], [8, 1, 1, "", "DurationByModelnameByDataset"], [8, 1, 1, "", "DurationLogByModelnameByDataset"], [8, 1, 1, "", "MeanOfMetricByModelname"], [8, 1, 1, "", "MerByModelnameByDataset"], [8, 1, 1, "", "WerByModelnameByDataset"], [8, 1, 1, "", "WilByModelnameByDataset"], [8, 1, 1, "", "WipByModelnameByDataset"]], "speechtotext.plot.customPlots.CerByModelnameByDataset": [[8, 3, 1, "", "create_plot"]], "speechtotext.plot.customPlots.DurationByModelnameByDataset": [[8, 3, 1, "", "create_plot"]], "speechtotext.plot.customPlots.DurationLogByModelnameByDataset": [[8, 3, 1, "", "create_plot"]], "speechtotext.plot.customPlots.MeanOfMetricByModelname": [[8, 3, 1, "", "create_plot"]], "speechtotext.plot.customPlots.MerByModelnameByDataset": [[8, 3, 1, "", "create_plot"]], "speechtotext.plot.customPlots.WerByModelnameByDataset": [[8, 3, 1, "", "create_plot"]], "speechtotext.plot.customPlots.WilByModelnameByDataset": [[8, 3, 1, "", "create_plot"]], "speechtotext.plot.customPlots.WipByModelnameByDataset": [[8, 3, 1, "", "create_plot"]], "speechtotext.plot.plotting": [[8, 1, 1, "", "BaseMatPlotLib"], [8, 1, 1, "", "BasePlotly"], [8, 1, 1, "", "Plotting"]], "speechtotext.plot.plotting.BaseMatPlotLib": [[8, 3, 1, "", "create_plot"], [8, 3, 1, "", "save"]], "speechtotext.plot.plotting.BasePlotly": [[8, 3, 1, "", "create_plot"], [8, 3, 1, "", "save"]], "speechtotext.plot.plotting.Plotting": [[8, 2, 1, "", "CUSTOM_ERRORS"], [8, 2, 1, "", "CUSTOM_ERROR_PLOTS"], [8, 2, 1, "", "CUSTOM_PLOTS"], [8, 2, 1, "", "CUSTOM_RESULTS"], [8, 3, 1, "", "launch_dtale"], [8, 3, 1, "", "save_all"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function", "5": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "exception", "Python exception"]}, "titleterms": {"code": 0, "exampl": 0, "speechtotext": [0, 1, 2, 3, 4, 5, 6, 7, 8], "full": 0, "usag": 0, "add": 0, "new": 0, "model": [0, 7], "wrapper": 0, "benchmark": [0, 4], "creat": 0, "modelwrapp": [0, 7], "us": 0, "custom": 0, "welcom": 1, "": 1, "document": 1, "get": 1, "start": 1, "packag": [1, 4, 5, 6, 7, 8], "content": [1, 3], "indic": 1, "tabl": 1, "requir": 3, "overview": 3, "env": 3, "whisper": 3, "api": 3, "amazon": 3, "transcrib": 3, "googl": 3, "deepgram": 3, "assemblyai": 3, "azur": 3, "speechmat": 3, "custombenchmark": 4, "function": 5, "dataset": 5, "metric": 6, "custommetr": 6, "whisperwrapp": 7, "amazonwrapp": 7, "googlewrapp": 7, "deepgramwrapp": 7, "assemblyaiwrapp": 7, "azurewrapp": 7, "speechmaticswrapp": 7, "plot": 8, "customplot": 8, "customerrorplot": 8, "instal": 2, "conda": 2, "pip": 2}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Code Examples for speechtotext": [[0, "code-examples-for-speechtotext"]], "Full usage example": [[0, "full-usage-example"]], "Add new model wrapper and benchmark": [[0, "add-new-model-wrapper-and-benchmark"]], "Create new ModelWrapper": [[0, "create-new-modelwrapper"]], "Create new Benchmark": [[0, "create-new-benchmark"]], "Use custom benchmarks": [[0, "use-custom-benchmarks"]], "Welcome to speechtotext\u2019s documentation!": [[1, "welcome-to-speechtotext-s-documentation"]], "Get started": [[1, null]], "Package Contents": [[1, null]], "Indices and tables": [[1, "indices-and-tables"]], "Installation for speechtotext": [[2, "installation-for-speechtotext"]], "conda": [[2, "conda"]], "pip": [[2, "pip"]], "Requirements for speechtotext": [[3, "requirements-for-speechtotext"]], "Overview": [[3, "overview"]], "Content of .env": [[3, "content-of-env"]], "Whisper API": [[3, "whisper-api"]], "Amazon transcribe": [[3, "amazon-transcribe"]], "Google API": [[3, "google-api"]], "Deepgram API": [[3, "deepgram-api"]], "AssemblyAI API": [[3, "assemblyai-api"]], "Azure API": [[3, "azure-api"]], "Speechmatics API": [[3, "speechmatics-api"]], "speechtotext benchmark package": [[4, "speechtotext-benchmark-package"]], "benchmarks": [[4, "module-speechtotext.benchmark.benchmarks"]], "customBenchmarks": [[4, "module-speechtotext.benchmark.customBenchmarks"]], "speechtotext package": [[5, "speechtotext-package"]], "functions": [[5, "module-speechtotext.functions"]], "datasets": [[5, "module-speechtotext.datasets"]], "speechtotext metric package": [[6, "speechtotext-metric-package"]], "metrics": [[6, "module-speechtotext.metric.metrics"]], "customMetrics": [[6, "module-speechtotext.metric.customMetrics"]], "speechtotext model package": [[7, "speechtotext-model-package"]], "modelWrapper": [[7, "module-speechtotext.model.modelWrapper"]], "whisperWrapper": [[7, "module-speechtotext.model.whisperWrapper"]], "amazonWrapper": [[7, "module-speechtotext.model.amazonWrapper"]], "googleWrapper": [[7, "module-speechtotext.model.googleWrapper"]], "deepgramWrapper": [[7, "module-speechtotext.model.deepgramWrapper"]], "assemblyAIWrapper": [[7, "module-speechtotext.model.assemblyAIWrapper"]], "azureWrapper": [[7, "module-speechtotext.model.azureWrapper"]], "speechmaticsWrapper": [[7, "module-speechtotext.model.speechmaticsWrapper"]], "speechtotext plot package": [[8, "speechtotext-plot-package"]], "plotting": [[8, "module-speechtotext.plot.plotting"]], "customPlots": [[8, "module-speechtotext.plot.customPlots"]], "customErrorPlots": [[8, "module-speechtotext.plot.customErrorPlots"]]}, "indexentries": {"amazonapibenchmark (class in speechtotext.benchmark.custombenchmarks)": [[4, "speechtotext.benchmark.customBenchmarks.AmazonAPIBenchmark"]], "assemblyaiapibenchmark (class in speechtotext.benchmark.custombenchmarks)": [[4, "speechtotext.benchmark.customBenchmarks.AssemblyAIAPIBenchmark"]], "azureapibenchmark (class in speechtotext.benchmark.custombenchmarks)": [[4, "speechtotext.benchmark.customBenchmarks.AzureAPIBenchmark"]], "benchmark_samples (speechtotext.benchmark.benchmarks.benchmark attribute)": [[4, "speechtotext.benchmark.benchmarks.Benchmark.BENCHMARK_SAMPLES"]], "benchmark (class in speechtotext.benchmark.benchmarks)": [[4, "speechtotext.benchmark.benchmarks.Benchmark"]], "dataset (speechtotext.benchmark.benchmarks.benchmark attribute)": [[4, "speechtotext.benchmark.benchmarks.Benchmark.DATASET"]], "deepgramapibenchmark (class in speechtotext.benchmark.custombenchmarks)": [[4, "speechtotext.benchmark.customBenchmarks.DeepgramAPIBenchmark"]], "error_list (speechtotext.benchmark.benchmarks.benchmark attribute)": [[4, "speechtotext.benchmark.benchmarks.Benchmark.ERROR_LIST"]], "googleapibenchmark (class in speechtotext.benchmark.custombenchmarks)": [[4, "speechtotext.benchmark.customBenchmarks.GoogleAPIBenchmark"]], "model_base (speechtotext.benchmark.custombenchmarks.amazonapibenchmark attribute)": [[4, "speechtotext.benchmark.customBenchmarks.AmazonAPIBenchmark.MODEL_BASE"]], "model_base (speechtotext.benchmark.custombenchmarks.assemblyaiapibenchmark attribute)": [[4, "speechtotext.benchmark.customBenchmarks.AssemblyAIAPIBenchmark.MODEL_BASE"]], "model_base (speechtotext.benchmark.custombenchmarks.azureapibenchmark attribute)": [[4, "speechtotext.benchmark.customBenchmarks.AzureAPIBenchmark.MODEL_BASE"]], "model_base (speechtotext.benchmark.custombenchmarks.deepgramapibenchmark attribute)": [[4, "speechtotext.benchmark.customBenchmarks.DeepgramAPIBenchmark.MODEL_BASE"]], "model_base (speechtotext.benchmark.custombenchmarks.googleapibenchmark attribute)": [[4, "speechtotext.benchmark.customBenchmarks.GoogleAPIBenchmark.MODEL_BASE"]], "model_base (speechtotext.benchmark.custombenchmarks.speechmaticsapibenchmark attribute)": [[4, "speechtotext.benchmark.customBenchmarks.SpeechmaticsAPIBenchmark.MODEL_BASE"]], "model_base (speechtotext.benchmark.custombenchmarks.whisperapibenchmark attribute)": [[4, "speechtotext.benchmark.customBenchmarks.WhisperAPIBenchmark.MODEL_BASE"]], "model_base (speechtotext.benchmark.custombenchmarks.whisperbenchmark attribute)": [[4, "speechtotext.benchmark.customBenchmarks.WhisperBenchmark.MODEL_BASE"]], "speechmaticsapibenchmark (class in speechtotext.benchmark.custombenchmarks)": [[4, "speechtotext.benchmark.customBenchmarks.SpeechmaticsAPIBenchmark"]], "whisperapibenchmark (class in speechtotext.benchmark.custombenchmarks)": [[4, "speechtotext.benchmark.customBenchmarks.WhisperAPIBenchmark"]], "whisperbenchmark (class in speechtotext.benchmark.custombenchmarks)": [[4, "speechtotext.benchmark.customBenchmarks.WhisperBenchmark"]], "convert_to_pandas() (speechtotext.benchmark.benchmarks.benchmark method)": [[4, "speechtotext.benchmark.benchmarks.Benchmark.convert_to_pandas"]], "create_models() (speechtotext.benchmark.benchmarks.benchmark method)": [[4, "speechtotext.benchmark.benchmarks.Benchmark.create_models"]], "create_models() (speechtotext.benchmark.custombenchmarks.amazonapibenchmark method)": [[4, "speechtotext.benchmark.customBenchmarks.AmazonAPIBenchmark.create_models"]], "create_models() (speechtotext.benchmark.custombenchmarks.assemblyaiapibenchmark method)": [[4, "speechtotext.benchmark.customBenchmarks.AssemblyAIAPIBenchmark.create_models"]], "create_models() (speechtotext.benchmark.custombenchmarks.azureapibenchmark method)": [[4, "speechtotext.benchmark.customBenchmarks.AzureAPIBenchmark.create_models"]], "create_models() (speechtotext.benchmark.custombenchmarks.deepgramapibenchmark method)": [[4, "speechtotext.benchmark.customBenchmarks.DeepgramAPIBenchmark.create_models"]], "create_models() (speechtotext.benchmark.custombenchmarks.googleapibenchmark method)": [[4, "speechtotext.benchmark.customBenchmarks.GoogleAPIBenchmark.create_models"]], "create_models() (speechtotext.benchmark.custombenchmarks.speechmaticsapibenchmark method)": [[4, "speechtotext.benchmark.customBenchmarks.SpeechmaticsAPIBenchmark.create_models"]], "create_models() (speechtotext.benchmark.custombenchmarks.whisperapibenchmark method)": [[4, "speechtotext.benchmark.customBenchmarks.WhisperAPIBenchmark.create_models"]], "create_models() (speechtotext.benchmark.custombenchmarks.whisperbenchmark method)": [[4, "speechtotext.benchmark.customBenchmarks.WhisperBenchmark.create_models"]], "module": [[4, "module-speechtotext.benchmark.benchmarks"], [4, "module-speechtotext.benchmark.customBenchmarks"], [5, "module-speechtotext.datasets"], [5, "module-speechtotext.functions"], [6, "module-speechtotext.metric.customMetrics"], [6, "module-speechtotext.metric.metrics"], [7, "module-speechtotext.model.amazonWrapper"], [7, "module-speechtotext.model.assemblyAIWrapper"], [7, "module-speechtotext.model.azureWrapper"], [7, "module-speechtotext.model.deepgramWrapper"], [7, "module-speechtotext.model.googleWrapper"], [7, "module-speechtotext.model.modelWrapper"], [7, "module-speechtotext.model.speechmaticsWrapper"], [7, "module-speechtotext.model.whisperWrapper"], [8, "module-speechtotext.plot.customErrorPlots"], [8, "module-speechtotext.plot.customPlots"], [8, "module-speechtotext.plot.plotting"]], "run_benchmarks() (in module speechtotext.benchmark.benchmarks)": [[4, "speechtotext.benchmark.benchmarks.run_benchmarks"]], "save_to_csv() (speechtotext.benchmark.benchmarks.benchmark method)": [[4, "speechtotext.benchmark.benchmarks.Benchmark.save_to_csv"]], "set_dataset() (speechtotext.benchmark.benchmarks.benchmark class method)": [[4, "speechtotext.benchmark.benchmarks.Benchmark.set_dataset"]], "speechtotext.benchmark.benchmarks": [[4, "module-speechtotext.benchmark.benchmarks"]], "speechtotext.benchmark.custombenchmarks": [[4, "module-speechtotext.benchmark.customBenchmarks"]], "update_samples() (speechtotext.benchmark.benchmarks.benchmark class method)": [[4, "speechtotext.benchmark.benchmarks.Benchmark.update_samples"]], "baseresult (class in speechtotext.functions)": [[5, "speechtotext.functions.BaseResult"]], "dataset (class in speechtotext.datasets)": [[5, "speechtotext.datasets.Dataset"]], "datasetbare (class in speechtotext.datasets)": [[5, "speechtotext.datasets.DatasetBare"]], "regex_string_parse (in module speechtotext.functions)": [[5, "speechtotext.functions.REGEX_STRING_PARSE"]], "requiredenvvariablesmissing": [[5, "speechtotext.functions.RequiredEnvVariablesMissing"]], "sampledataset (class in speechtotext.datasets)": [[5, "speechtotext.datasets.SampleDataset"]], "benchmark_results_to_csv() (in module speechtotext.functions)": [[5, "speechtotext.functions.benchmark_results_to_csv"]], "force_cudnn_initialization() (in module speechtotext.functions)": [[5, "speechtotext.functions.force_cudnn_initialization"]], "get_extention_of_file_name() (in module speechtotext.functions)": [[5, "speechtotext.functions.get_extention_of_file_name"]], "get_file_name_without_extention() (in module speechtotext.functions)": [[5, "speechtotext.functions.get_file_name_without_extention"]], "get_n_samples() (speechtotext.datasets.dataset method)": [[5, "speechtotext.datasets.Dataset.get_n_samples"]], "get_path_of_fragment() (speechtotext.datasets.datasetbare method)": [[5, "speechtotext.datasets.DatasetBare.get_path_of_fragment"]], "get_text_of_id() (speechtotext.datasets.datasetbare method)": [[5, "speechtotext.datasets.DatasetBare.get_text_of_id"]], "join_benchmark_results() (in module speechtotext.functions)": [[5, "speechtotext.functions.join_benchmark_results"]], "load_env_variable() (in module speechtotext.functions)": [[5, "speechtotext.functions.load_env_variable"]], "load_transcript() (speechtotext.datasets.dataset method)": [[5, "speechtotext.datasets.Dataset.load_transcript"]], "multidispatch() (in module speechtotext.functions)": [[5, "speechtotext.functions.multidispatch"]], "number_of_samples() (speechtotext.datasets.datasetbare method)": [[5, "speechtotext.datasets.DatasetBare.number_of_samples"]], "save() (speechtotext.functions.baseresult method)": [[5, "speechtotext.functions.BaseResult.save"]], "save_folder_name() (in module speechtotext.functions)": [[5, "speechtotext.functions.save_folder_name"]], "save_sub_folder_name() (in module speechtotext.functions)": [[5, "speechtotext.functions.save_sub_folder_name"]], "separate_benchmark_results_by_model() (in module speechtotext.functions)": [[5, "speechtotext.functions.separate_benchmark_results_by_model"]], "speechtotext.datasets": [[5, "module-speechtotext.datasets"]], "speechtotext.functions": [[5, "module-speechtotext.functions"]], "string_cleaning() (in module speechtotext.functions)": [[5, "speechtotext.functions.string_cleaning"]], "timing() (in module speechtotext.functions)": [[5, "speechtotext.functions.timing"]], "basemetrics (class in speechtotext.metric.custommetrics)": [[6, "speechtotext.metric.customMetrics.BaseMetrics"]], "benchmarkresults (class in speechtotext.metric.custommetrics)": [[6, "speechtotext.metric.customMetrics.BenchmarkResults"]], "errormetrics (class in speechtotext.metric.custommetrics)": [[6, "speechtotext.metric.customMetrics.ErrorMetrics"]], "metrics (class in speechtotext.metric.metrics)": [[6, "speechtotext.metric.metrics.Metrics"]], "resultmetrics (class in speechtotext.metric.custommetrics)": [[6, "speechtotext.metric.customMetrics.ResultMetrics"]], "cer (speechtotext.metric.metrics.metrics attribute)": [[6, "speechtotext.metric.metrics.Metrics.cer"]], "create_df() (speechtotext.metric.custommetrics.basemetrics method)": [[6, "speechtotext.metric.customMetrics.BaseMetrics.create_df"]], "create_df() (speechtotext.metric.custommetrics.benchmarkresults method)": [[6, "speechtotext.metric.customMetrics.BenchmarkResults.create_df"]], "create_df() (speechtotext.metric.custommetrics.errormetrics method)": [[6, "speechtotext.metric.customMetrics.ErrorMetrics.create_df"]], "create_df() (speechtotext.metric.custommetrics.resultmetrics method)": [[6, "speechtotext.metric.customMetrics.ResultMetrics.create_df"]], "mer (speechtotext.metric.metrics.metrics attribute)": [[6, "speechtotext.metric.metrics.Metrics.mer"]], "notebook_metrics_print() (in module speechtotext.metric.metrics)": [[6, "speechtotext.metric.metrics.notebook_metrics_print"]], "save() (speechtotext.metric.custommetrics.basemetrics method)": [[6, "speechtotext.metric.customMetrics.BaseMetrics.save"]], "speechtotext.metric.custommetrics": [[6, "module-speechtotext.metric.customMetrics"]], "speechtotext.metric.metrics": [[6, "module-speechtotext.metric.metrics"]], "wer (speechtotext.metric.metrics.metrics attribute)": [[6, "speechtotext.metric.metrics.Metrics.wer"]], "wil (speechtotext.metric.metrics.metrics attribute)": [[6, "speechtotext.metric.metrics.Metrics.wil"]], "wip (speechtotext.metric.metrics.metrics attribute)": [[6, "speechtotext.metric.metrics.Metrics.wip"]], "amazon_default (speechtotext.model.amazonwrapper.amazonapiversion attribute)": [[7, "speechtotext.model.amazonWrapper.AmazonAPIVersion.AMAZON_DEFAULT"]], "api_url (speechtotext.model.assemblyaiwrapper.assemblyaiapiwrapper attribute)": [[7, "speechtotext.model.assemblyAIWrapper.AssemblyAIAPIWrapper.API_URL"]], "assemblyai_default (speechtotext.model.assemblyaiwrapper.assemblyaiapiversion attribute)": [[7, "speechtotext.model.assemblyAIWrapper.AssemblyAIAPIVersion.ASSEMBLYAI_DEFAULT"]], "azure_default (speechtotext.model.azurewrapper.azureapiversion attribute)": [[7, "speechtotext.model.azureWrapper.AzureAPIVersion.AZURE_DEFAULT"]], "amazonapiversion (class in speechtotext.model.amazonwrapper)": [[7, "speechtotext.model.amazonWrapper.AmazonAPIVersion"]], "amazonapiwrapper (class in speechtotext.model.amazonwrapper)": [[7, "speechtotext.model.amazonWrapper.AmazonAPIWrapper"]], "assemblyaiapiversion (class in speechtotext.model.assemblyaiwrapper)": [[7, "speechtotext.model.assemblyAIWrapper.AssemblyAIAPIVersion"]], "assemblyaiapiwrapper (class in speechtotext.model.assemblyaiwrapper)": [[7, "speechtotext.model.assemblyAIWrapper.AssemblyAIAPIWrapper"]], "azureapiversion (class in speechtotext.model.azurewrapper)": [[7, "speechtotext.model.azureWrapper.AzureAPIVersion"]], "azureapiwrapper (class in speechtotext.model.azurewrapper)": [[7, "speechtotext.model.azureWrapper.AzureAPIWrapper"]], "base (speechtotext.model.whisperwrapper.whisperversion attribute)": [[7, "speechtotext.model.whisperWrapper.WhisperVersion.BASE"]], "bucket_exist (speechtotext.model.amazonwrapper.amazonapiwrapper attribute)": [[7, "speechtotext.model.amazonWrapper.AmazonAPIWrapper.BUCKET_EXIST"]], "connection_url (speechtotext.model.speechmaticswrapper.speechmaticsapiwrapper attribute)": [[7, "speechtotext.model.speechmaticsWrapper.SpeechmaticsAPIWrapper.CONNECTION_URL"]], "deepgram_default (speechtotext.model.deepgramwrapper.deepgramapiversion attribute)": [[7, "speechtotext.model.deepgramWrapper.DeepgramAPIVersion.DEEPGRAM_DEFAULT"]], "deepgram_enhanced (speechtotext.model.deepgramwrapper.deepgramapiversion attribute)": [[7, "speechtotext.model.deepgramWrapper.DeepgramAPIVersion.DEEPGRAM_ENHANCED"]], "deepgramapiversion (class in speechtotext.model.deepgramwrapper)": [[7, "speechtotext.model.deepgramWrapper.DeepgramAPIVersion"]], "deepgramapiwrapper (class in speechtotext.model.deepgramwrapper)": [[7, "speechtotext.model.deepgramWrapper.DeepgramAPIWrapper"]], "google_default (speechtotext.model.googlewrapper.googleapiversion attribute)": [[7, "speechtotext.model.googleWrapper.GoogleAPIVersion.GOOGLE_DEFAULT"]], "googleapiversion (class in speechtotext.model.googlewrapper)": [[7, "speechtotext.model.googleWrapper.GoogleAPIVersion"]], "googleapiwrapper (class in speechtotext.model.googlewrapper)": [[7, "speechtotext.model.googleWrapper.GoogleAPIWrapper"]], "language_code (speechtotext.model.amazonwrapper.amazonapiwrapper attribute)": [[7, "speechtotext.model.amazonWrapper.AmazonAPIWrapper.LANGUAGE_CODE"]], "language_code (speechtotext.model.assemblyaiwrapper.assemblyaiapiwrapper attribute)": [[7, "speechtotext.model.assemblyAIWrapper.AssemblyAIAPIWrapper.LANGUAGE_CODE"]], "language_code (speechtotext.model.azurewrapper.azureapiwrapper attribute)": [[7, "speechtotext.model.azureWrapper.AzureAPIWrapper.LANGUAGE_CODE"]], "language_code (speechtotext.model.deepgramwrapper.deepgramapiwrapper attribute)": [[7, "speechtotext.model.deepgramWrapper.DeepgramAPIWrapper.LANGUAGE_CODE"]], "language_code (speechtotext.model.googlewrapper.googleapiwrapper attribute)": [[7, "speechtotext.model.googleWrapper.GoogleAPIWrapper.LANGUAGE_CODE"]], "language_code (speechtotext.model.speechmaticswrapper.speechmaticsapiwrapper attribute)": [[7, "speechtotext.model.speechmaticsWrapper.SpeechmaticsAPIWrapper.LANGUAGE_CODE"]], "large (speechtotext.model.whisperwrapper.whisperversion attribute)": [[7, "speechtotext.model.whisperWrapper.WhisperVersion.LARGE"]], "medium (speechtotext.model.whisperwrapper.whisperversion attribute)": [[7, "speechtotext.model.whisperWrapper.WhisperVersion.MEDIUM"]], "modelversion (class in speechtotext.model.modelwrapper)": [[7, "speechtotext.model.modelWrapper.ModelVersion"]], "modelwrapper (class in speechtotext.model.modelwrapper)": [[7, "speechtotext.model.modelWrapper.ModelWrapper"]], "polling_endpoint (speechtotext.model.assemblyaiwrapper.assemblyaiapiwrapper attribute)": [[7, "speechtotext.model.assemblyAIWrapper.AssemblyAIAPIWrapper.POLLING_ENDPOINT"]], "small (speechtotext.model.whisperwrapper.whisperversion attribute)": [[7, "speechtotext.model.whisperWrapper.WhisperVersion.SMALL"]], "speechmatics_default (speechtotext.model.speechmaticswrapper.speechmaticsapiversion attribute)": [[7, "speechtotext.model.speechmaticsWrapper.SpeechmaticsAPIVersion.SPEECHMATICS_DEFAULT"]], "speechmaticsapiversion (class in speechtotext.model.speechmaticswrapper)": [[7, "speechtotext.model.speechmaticsWrapper.SpeechmaticsAPIVersion"]], "speechmaticsapiwrapper (class in speechtotext.model.speechmaticswrapper)": [[7, "speechtotext.model.speechmaticsWrapper.SpeechmaticsAPIWrapper"]], "time_sleep (speechtotext.model.assemblyaiwrapper.assemblyaiapiwrapper attribute)": [[7, "speechtotext.model.assemblyAIWrapper.AssemblyAIAPIWrapper.TIME_SLEEP"]], "tiny (speechtotext.model.whisperwrapper.whisperversion attribute)": [[7, "speechtotext.model.whisperWrapper.WhisperVersion.TINY"]], "transcript_endpoint (speechtotext.model.assemblyaiwrapper.assemblyaiapiwrapper attribute)": [[7, "speechtotext.model.assemblyAIWrapper.AssemblyAIAPIWrapper.TRANSCRIPT_ENDPOINT"]], "upload_endpoint (speechtotext.model.assemblyaiwrapper.assemblyaiapiwrapper attribute)": [[7, "speechtotext.model.assemblyAIWrapper.AssemblyAIAPIWrapper.UPLOAD_ENDPOINT"]], "whisper_1 (speechtotext.model.whisperwrapper.whisperapiversion attribute)": [[7, "speechtotext.model.whisperWrapper.WhisperAPIVersion.WHISPER_1"]], "whisperapiversion (class in speechtotext.model.whisperwrapper)": [[7, "speechtotext.model.whisperWrapper.WhisperAPIVersion"]], "whisperapiwrapper (class in speechtotext.model.whisperwrapper)": [[7, "speechtotext.model.whisperWrapper.WhisperAPIWrapper"]], "whisperversion (class in speechtotext.model.whisperwrapper)": [[7, "speechtotext.model.whisperWrapper.WhisperVersion"]], "whisperwrapper (class in speechtotext.model.whisperwrapper)": [[7, "speechtotext.model.whisperWrapper.WhisperWrapper"]], "benchmark_n_samples() (speechtotext.model.modelwrapper.modelwrapper method)": [[7, "speechtotext.model.modelWrapper.ModelWrapper.benchmark_n_samples"]], "benchmark_sample() (speechtotext.model.modelwrapper.modelwrapper method)": [[7, "speechtotext.model.modelWrapper.ModelWrapper.benchmark_sample"]], "benchmark_samples() (speechtotext.model.modelwrapper.modelwrapper method)": [[7, "speechtotext.model.modelWrapper.ModelWrapper.benchmark_samples"]], "convert_sample() (speechtotext.model.modelwrapper.modelwrapper method)": [[7, "speechtotext.model.modelWrapper.ModelWrapper.convert_sample"]], "get_model() (speechtotext.model.amazonwrapper.amazonapiwrapper method)": [[7, "speechtotext.model.amazonWrapper.AmazonAPIWrapper.get_model"]], "get_model() (speechtotext.model.assemblyaiwrapper.assemblyaiapiwrapper method)": [[7, "speechtotext.model.assemblyAIWrapper.AssemblyAIAPIWrapper.get_model"]], "get_model() (speechtotext.model.azurewrapper.azureapiwrapper method)": [[7, "speechtotext.model.azureWrapper.AzureAPIWrapper.get_model"]], "get_model() (speechtotext.model.deepgramwrapper.deepgramapiwrapper method)": [[7, "speechtotext.model.deepgramWrapper.DeepgramAPIWrapper.get_model"]], "get_model() (speechtotext.model.googlewrapper.googleapiwrapper method)": [[7, "speechtotext.model.googleWrapper.GoogleAPIWrapper.get_model"]], "get_model() (speechtotext.model.modelwrapper.modelwrapper method)": [[7, "speechtotext.model.modelWrapper.ModelWrapper.get_model"]], "get_model() (speechtotext.model.speechmaticswrapper.speechmaticsapiwrapper method)": [[7, "speechtotext.model.speechmaticsWrapper.SpeechmaticsAPIWrapper.get_model"]], "get_model() (speechtotext.model.whisperwrapper.whisperapiwrapper method)": [[7, "speechtotext.model.whisperWrapper.WhisperAPIWrapper.get_model"]], "get_model() (speechtotext.model.whisperwrapper.whisperwrapper method)": [[7, "speechtotext.model.whisperWrapper.WhisperWrapper.get_model"]], "get_transcript_of_file() (speechtotext.model.amazonwrapper.amazonapiwrapper method)": [[7, "speechtotext.model.amazonWrapper.AmazonAPIWrapper.get_transcript_of_file"]], "get_transcript_of_file() (speechtotext.model.assemblyaiwrapper.assemblyaiapiwrapper method)": [[7, "speechtotext.model.assemblyAIWrapper.AssemblyAIAPIWrapper.get_transcript_of_file"]], "get_transcript_of_file() (speechtotext.model.azurewrapper.azureapiwrapper method)": [[7, "speechtotext.model.azureWrapper.AzureAPIWrapper.get_transcript_of_file"]], "get_transcript_of_file() (speechtotext.model.deepgramwrapper.deepgramapiwrapper method)": [[7, "speechtotext.model.deepgramWrapper.DeepgramAPIWrapper.get_transcript_of_file"]], "get_transcript_of_file() (speechtotext.model.googlewrapper.googleapiwrapper method)": [[7, "speechtotext.model.googleWrapper.GoogleAPIWrapper.get_transcript_of_file"]], "get_transcript_of_file() (speechtotext.model.modelwrapper.modelwrapper method)": [[7, "speechtotext.model.modelWrapper.ModelWrapper.get_transcript_of_file"]], "get_transcript_of_file() (speechtotext.model.speechmaticswrapper.speechmaticsapiwrapper method)": [[7, "speechtotext.model.speechmaticsWrapper.SpeechmaticsAPIWrapper.get_transcript_of_file"]], "get_transcript_of_file() (speechtotext.model.whisperwrapper.whisperapiwrapper method)": [[7, "speechtotext.model.whisperWrapper.WhisperAPIWrapper.get_transcript_of_file"]], "get_transcript_of_file() (speechtotext.model.whisperwrapper.whisperwrapper method)": [[7, "speechtotext.model.whisperWrapper.WhisperWrapper.get_transcript_of_file"]], "speechtotext.model.amazonwrapper": [[7, "module-speechtotext.model.amazonWrapper"]], "speechtotext.model.assemblyaiwrapper": [[7, "module-speechtotext.model.assemblyAIWrapper"]], "speechtotext.model.azurewrapper": [[7, "module-speechtotext.model.azureWrapper"]], "speechtotext.model.deepgramwrapper": [[7, "module-speechtotext.model.deepgramWrapper"]], "speechtotext.model.googlewrapper": [[7, "module-speechtotext.model.googleWrapper"]], "speechtotext.model.modelwrapper": [[7, "module-speechtotext.model.modelWrapper"]], "speechtotext.model.speechmaticswrapper": [[7, "module-speechtotext.model.speechmaticsWrapper"]], "speechtotext.model.whisperwrapper": [[7, "module-speechtotext.model.whisperWrapper"]], "basematplotlib (class in speechtotext.plot.plotting)": [[8, "speechtotext.plot.plotting.BaseMatPlotLib"]], "baseplotly (class in speechtotext.plot.plotting)": [[8, "speechtotext.plot.plotting.BasePlotly"]], "custom_errors (speechtotext.plot.plotting.plotting attribute)": [[8, "speechtotext.plot.plotting.Plotting.CUSTOM_ERRORS"]], "custom_error_plots (speechtotext.plot.plotting.plotting attribute)": [[8, "speechtotext.plot.plotting.Plotting.CUSTOM_ERROR_PLOTS"]], "custom_plots (speechtotext.plot.plotting.plotting attribute)": [[8, "speechtotext.plot.plotting.Plotting.CUSTOM_PLOTS"]], "custom_results (speechtotext.plot.plotting.plotting attribute)": [[8, "speechtotext.plot.plotting.Plotting.CUSTOM_RESULTS"]], "cerbymodelnamebydataset (class in speechtotext.plot.customplots)": [[8, "speechtotext.plot.customPlots.CerByModelnameByDataset"]], "durationbymodelnamebydataset (class in speechtotext.plot.customplots)": [[8, "speechtotext.plot.customPlots.DurationByModelnameByDataset"]], "durationlogbymodelnamebydataset (class in speechtotext.plot.customplots)": [[8, "speechtotext.plot.customPlots.DurationLogByModelnameByDataset"]], "errorcountbymodel (class in speechtotext.plot.customerrorplots)": [[8, "speechtotext.plot.customErrorPlots.ErrorCountByModel"]], "errorcountbymodelbydataset (class in speechtotext.plot.customerrorplots)": [[8, "speechtotext.plot.customErrorPlots.ErrorCountByModelByDataset"]], "errorcountheatmap (class in speechtotext.plot.customerrorplots)": [[8, "speechtotext.plot.customErrorPlots.ErrorCountHeatmap"]], "meanofmetricbymodelname (class in speechtotext.plot.customplots)": [[8, "speechtotext.plot.customPlots.MeanOfMetricByModelname"]], "merbymodelnamebydataset (class in speechtotext.plot.customplots)": [[8, "speechtotext.plot.customPlots.MerByModelnameByDataset"]], "plotting (class in speechtotext.plot.plotting)": [[8, "speechtotext.plot.plotting.Plotting"]], "werbymodelnamebydataset (class in speechtotext.plot.customplots)": [[8, "speechtotext.plot.customPlots.WerByModelnameByDataset"]], "wilbymodelnamebydataset (class in speechtotext.plot.customplots)": [[8, "speechtotext.plot.customPlots.WilByModelnameByDataset"]], "wipbymodelnamebydataset (class in speechtotext.plot.customplots)": [[8, "speechtotext.plot.customPlots.WipByModelnameByDataset"]], "create_plot() (speechtotext.plot.customerrorplots.errorcountbymodel method)": [[8, "speechtotext.plot.customErrorPlots.ErrorCountByModel.create_plot"]], "create_plot() (speechtotext.plot.customerrorplots.errorcountbymodelbydataset method)": [[8, "speechtotext.plot.customErrorPlots.ErrorCountByModelByDataset.create_plot"]], "create_plot() (speechtotext.plot.customerrorplots.errorcountheatmap method)": [[8, "speechtotext.plot.customErrorPlots.ErrorCountHeatmap.create_plot"]], "create_plot() (speechtotext.plot.customplots.cerbymodelnamebydataset method)": [[8, "speechtotext.plot.customPlots.CerByModelnameByDataset.create_plot"]], "create_plot() (speechtotext.plot.customplots.durationbymodelnamebydataset method)": [[8, "speechtotext.plot.customPlots.DurationByModelnameByDataset.create_plot"]], "create_plot() (speechtotext.plot.customplots.durationlogbymodelnamebydataset method)": [[8, "speechtotext.plot.customPlots.DurationLogByModelnameByDataset.create_plot"]], "create_plot() (speechtotext.plot.customplots.meanofmetricbymodelname method)": [[8, "speechtotext.plot.customPlots.MeanOfMetricByModelname.create_plot"]], "create_plot() (speechtotext.plot.customplots.merbymodelnamebydataset method)": [[8, "speechtotext.plot.customPlots.MerByModelnameByDataset.create_plot"]], "create_plot() (speechtotext.plot.customplots.werbymodelnamebydataset method)": [[8, "speechtotext.plot.customPlots.WerByModelnameByDataset.create_plot"]], "create_plot() (speechtotext.plot.customplots.wilbymodelnamebydataset method)": [[8, "speechtotext.plot.customPlots.WilByModelnameByDataset.create_plot"]], "create_plot() (speechtotext.plot.customplots.wipbymodelnamebydataset method)": [[8, "speechtotext.plot.customPlots.WipByModelnameByDataset.create_plot"]], "create_plot() (speechtotext.plot.plotting.basematplotlib method)": [[8, "speechtotext.plot.plotting.BaseMatPlotLib.create_plot"]], "create_plot() (speechtotext.plot.plotting.baseplotly method)": [[8, "speechtotext.plot.plotting.BasePlotly.create_plot"]], "launch_dtale() (speechtotext.plot.plotting.plotting method)": [[8, "speechtotext.plot.plotting.Plotting.launch_dtale"]], "save() (speechtotext.plot.plotting.basematplotlib method)": [[8, "speechtotext.plot.plotting.BaseMatPlotLib.save"]], "save() (speechtotext.plot.plotting.baseplotly method)": [[8, "speechtotext.plot.plotting.BasePlotly.save"]], "save_all() (speechtotext.plot.plotting.plotting method)": [[8, "speechtotext.plot.plotting.Plotting.save_all"]], "speechtotext.plot.customerrorplots": [[8, "module-speechtotext.plot.customErrorPlots"]], "speechtotext.plot.customplots": [[8, "module-speechtotext.plot.customPlots"]], "speechtotext.plot.plotting": [[8, "module-speechtotext.plot.plotting"]]}})